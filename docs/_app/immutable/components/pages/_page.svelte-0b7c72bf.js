import{S as Mt,i as zt,s as Nt,k as l,a as q,q as c,V as Bt,l as o,h as s,c as x,m as f,r as i,n as t,J as e,b as me,f as M,d as ge,t as O,N as xt,w as _e,x as ye,y as Dt,z as ke,g as be,A as Ee,W as Rt}from"../../chunks/index-f0d2796c.js";import{H as ot,h as At}from"../../chunks/hljsDefineSvelte-185b3d8f.js";import{e as Lt}from"../../chunks/_examples-f8ca2211.js";import{e as Ct}from"../../chunks/_examples_ssr-e49649d4.js";function Ht(w,h,p){const d=w.slice();return d[1]=h[p],d}function It(w,h,p){const d=w.slice();return d[1]=h[p],d}function Vt(w){let h,p,d,y=w[1].title+"",A,C,k,H,D,r,E,m;var $=w[1].component;function L(u){return{}}return $&&(r=_e($,L())),{c(){h=l("div"),p=l("h4"),d=l("a"),A=c(y),C=q(),k=l("a"),H=c("Edit"),D=q(),r&&ye(r.$$.fragment),E=q(),this.h()},l(u){h=o(u,"DIV",{class:!0});var S=f(h);p=o(S,"H4",{class:!0});var b=f(p);d=o(b,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var z=f(d);A=i(z,y),z.forEach(s),C=x(b),k=o(b,"A",{class:!0,href:!0,target:!0,rel:!0});var N=f(k);H=i(N,"Edit"),N.forEach(s),b.forEach(s),D=x(S),r&&Dt(r.$$.fragment,S),E=x(S),S.forEach(s),this.h()},h(){t(d,"sveltekit:prefetch",""),t(d,"href","/example/"+w[1].slug),t(d,"class","svelte-rfh4mq"),t(k,"class","edit-repl svelte-rfh4mq"),t(k,"href","https://svelte.dev/repl/"+w[1].replPath),t(k,"target","_blank"),t(k,"rel","noreferrer"),t(p,"class","title svelte-rfh4mq"),t(h,"class","gallery-item svelte-rfh4mq")},m(u,S){me(u,h,S),e(h,p),e(p,d),e(d,A),e(p,C),e(p,k),e(k,H),e(h,D),r&&ke(r,h,null),e(h,E),m=!0},p(u,S){if($!==($=u[1].component)){if(r){be();const b=r;O(b.$$.fragment,1,0,()=>{Ee(b,1)}),ge()}$?(r=_e($,L()),ye(r.$$.fragment),M(r.$$.fragment,1),ke(r,h,E)):r=null}},i(u){m||(r&&M(r.$$.fragment,u),m=!0)},o(u){r&&O(r.$$.fragment,u),m=!1},d(u){u&&s(h),r&&Ee(r)}}}function Pt(w){let h,p,d,y=w[1].title+"",A,C,k,H,D,r,E,m;var $=w[1].component;function L(u){return{}}return $&&(r=_e($,L())),{c(){h=l("div"),p=l("h4"),d=l("a"),A=c(y),C=q(),k=l("a"),H=c("Edit"),D=q(),r&&ye(r.$$.fragment),E=q(),this.h()},l(u){h=o(u,"DIV",{class:!0});var S=f(h);p=o(S,"H4",{class:!0});var b=f(p);d=o(b,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var z=f(d);A=i(z,y),z.forEach(s),C=x(b),k=o(b,"A",{class:!0,href:!0,target:!0,rel:!0});var N=f(k);H=i(N,"Edit"),N.forEach(s),b.forEach(s),D=x(S),r&&Dt(r.$$.fragment,S),E=x(S),S.forEach(s),this.h()},h(){t(d,"sveltekit:prefetch",""),t(d,"href","/example-ssr/"+w[1].slug),t(d,"class","svelte-rfh4mq"),t(k,"class","edit-repl svelte-rfh4mq"),t(k,"href","https://svelte.dev/repl/"+w[1].replPath),t(k,"target","_blank"),t(k,"rel","noreferrer"),t(p,"class","title svelte-rfh4mq"),t(h,"class","gallery-item svelte-rfh4mq"),Rt(h,"scaled",w[1].title.toLowerCase().includes("map"))},m(u,S){me(u,h,S),e(h,p),e(p,d),e(d,A),e(p,C),e(p,k),e(k,H),e(h,D),r&&ke(r,h,null),e(h,E),m=!0},p(u,S){if($!==($=u[1].component)){if(r){be();const b=r;O(b.$$.fragment,1,0,()=>{Ee(b,1)}),ge()}$?(r=_e($,L()),ye(r.$$.fragment),M(r.$$.fragment,1),ke(r,h,E)):r=null}},i(u){m||(r&&M(r.$$.fragment,u),m=!0)},o(u){r&&O(r.$$.fragment,u),m=!1},d(u){u&&s(h),r&&Ee(r)}}}function Ut(w){let h,p,d,y,A,C,k,H,D,r,E,m,$,L,u,S,b,z,N,se,Se,we,le,$e,qe,Q,xe,Ae,Le,I,Ce,W,He,Ie,oe,Ve,Pe,ne,De,Te,X,Je,je,Ge,V,Me,Y,ze,Ne,B,Be,Re,F,Ue,We,Xe,ce,ie,Tt=ot.highlight(w[0],{language:"svelte"}).value+"",Ye,Z,Fe,T,he,Ke,Oe,J,Qe,R,Ze,et,U,tt,at,rt,de,st,lt,ee,ve,te=Lt,g=[];for(let n=0;n<te.length;n+=1)g[n]=Vt(It(w,te,n));const Jt=n=>O(g[n],1,1,()=>{g[n]=null});let ae=Ct,_=[];for(let n=0;n<ae.length;n+=1)_[n]=Pt(Ht(w,ae,n));const jt=n=>O(_[n],1,1,()=>{_[n]=null});return{c(){h=l("meta"),p=l("meta"),d=q(),y=l("div"),A=l("div"),C=l("div"),k=q(),H=l("h1"),D=c("Layer Cake"),r=q(),E=l("div"),m=l("p"),$=c("Layer Cake is a graphics framework for "),L=l("a"),u=c("Svelte"),S=c(". It uses the measurements of your target div and your data extents to create scales that "),b=l("span"),z=c("stay synced"),N=c(" on layout changes. Use these scales to organize multiple, "),se=l("span"),Se=c("mostly-reusable Svelte components"),we=c(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=l("span"),$e=c("responsive graphics server-side"),qe=c(" that "),Q=l("a"),xe=c("work without JavaScript"),Ae=c("."),Le=q(),I=l("p"),Ce=c("Unlike other libraries, "),W=l("a"),He=c("chart components"),Ie=c(" live "),oe=l("span"),Ve=c("inside your project"),Pe=c(", so you have complete control for "),ne=l("span"),De=c("customization"),Te=c(". It also includes some handy "),X=l("a"),Je=c("helper functions"),je=c(" to help format your data into the right shape."),Ge=q(),V=l("p"),Me=c("Read the "),Y=l("a"),ze=c("guide"),Ne=c(", try the "),B=l("a"),Be=c("starter template"),Re=c(" or check out the "),F=l("a"),Ue=c("example components"),We=c(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Xe=q(),ce=l("div"),ie=l("pre"),Ye=q(),Z=l("div");for(let n=0;n<g.length;n+=1)g[n].c();Fe=q(),T=l("div"),he=l("h2"),Ke=c("Server-side rendering"),Oe=q(),J=l("p"),Qe=c("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=l("a"),Ze=c("viewBox"),et=c(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=l("a"),tt=c("this blog post"),at=c("."),rt=q(),de=l("p"),st=c("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),lt=q(),ee=l("div");for(let n=0;n<_.length;n+=1)_[n].c();this.h()},l(n){const v=Bt("svelte-ep3aok",document.head);h=o(v,"META",{name:!0,content:!0}),p=o(v,"META",{name:!0,content:!0}),v.forEach(s),d=x(n),y=o(n,"DIV",{class:!0});var a=f(y);A=o(a,"DIV",{class:!0});var j=f(A);C=o(j,"DIV",{id:!0,class:!0}),f(C).forEach(s),k=x(j),H=o(j,"H1",{class:!0});var nt=f(H);D=i(nt,"Layer Cake"),nt.forEach(s),j.forEach(s),r=x(a),E=o(a,"DIV",{id:!0,class:!0});var fe=f(E);m=o(fe,"P",{class:!0});var P=f(m);$=i(P,"Layer Cake is a graphics framework for "),L=o(P,"A",{href:!0,target:!0,rel:!0,class:!0});var ct=f(L);u=i(ct,"Svelte"),ct.forEach(s),S=i(P,". It uses the measurements of your target div and your data extents to create scales that "),b=o(P,"SPAN",{class:!0});var it=f(b);z=i(it,"stay synced"),it.forEach(s),N=i(P," on layout changes. Use these scales to organize multiple, "),se=o(P,"SPAN",{class:!0});var ht=f(se);Se=i(ht,"mostly-reusable Svelte components"),ht.forEach(s),we=i(P,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o(P,"SPAN",{class:!0});var ft=f(le);$e=i(ft,"responsive graphics server-side"),ft.forEach(s),qe=i(P," that "),Q=o(P,"A",{href:!0,class:!0});var ut=f(Q);xe=i(ut,"work without JavaScript"),ut.forEach(s),Ae=i(P,"."),P.forEach(s),Le=x(fe),I=o(fe,"P",{class:!0});var G=f(I);Ce=i(G,"Unlike other libraries, "),W=o(G,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var pt=f(W);He=i(pt,"chart components"),pt.forEach(s),Ie=i(G," live "),oe=o(G,"SPAN",{class:!0});var dt=f(oe);Ve=i(dt,"inside your project"),dt.forEach(s),Pe=i(G,", so you have complete control for "),ne=o(G,"SPAN",{class:!0});var vt=f(ne);De=i(vt,"customization"),vt.forEach(s),Te=i(G,". It also includes some handy "),X=o(G,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var mt=f(X);Je=i(mt,"helper functions"),mt.forEach(s),je=i(G," to help format your data into the right shape."),G.forEach(s),Ge=x(fe),V=o(fe,"P",{class:!0});var K=f(V);Me=i(K,"Read the "),Y=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var gt=f(Y);ze=i(gt,"guide"),gt.forEach(s),Ne=i(K,", try the "),B=o(K,"A",{href:!0,target:!0,rel:!0,class:!0});var _t=f(B);Be=i(_t,"starter template"),_t.forEach(s),Re=i(K," or check out the "),F=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=f(F);Ue=i(yt,"example components"),yt.forEach(s),We=i(K,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),K.forEach(s),fe.forEach(s),Xe=x(a),ce=o(a,"DIV",{class:!0});var kt=f(ce);ie=o(kt,"PRE",{class:!0});var Gt=f(ie);Gt.forEach(s),kt.forEach(s),Ye=x(a),Z=o(a,"DIV",{id:!0});var bt=f(Z);for(let re=0;re<g.length;re+=1)g[re].l(bt);bt.forEach(s),Fe=x(a),T=o(a,"DIV",{class:!0,id:!0});var ue=f(T);he=o(ue,"H2",{class:!0});var Et=f(he);Ke=i(Et,"Server-side rendering"),Et.forEach(s),Oe=x(ue),J=o(ue,"P",{class:!0});var pe=f(J);Qe=i(pe,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=o(pe,"A",{href:!0,target:!0,rel:!0,class:!0});var St=f(R);Ze=i(St,"viewBox"),St.forEach(s),et=i(pe," and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=o(pe,"A",{href:!0,target:!0,rel:!0,class:!0});var wt=f(U);tt=i(wt,"this blog post"),wt.forEach(s),at=i(pe,"."),pe.forEach(s),rt=x(ue),de=o(ue,"P",{});var $t=f(de);st=i($t,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),$t.forEach(s),ue.forEach(s),lt=x(a),ee=o(a,"DIV",{id:!0});var qt=f(ee);for(let re=0;re<_.length;re+=1)_[re].l(qt);qt.forEach(s),a.forEach(s),this.h()},h(){document.title="Layer Cake",t(h,"name","og:title"),t(h,"content","Layer Cake"),t(p,"name","twitter:title"),t(p,"content","Layer Cake"),t(C,"id","logo"),t(C,"class","svelte-rfh4mq"),t(H,"class","svelte-rfh4mq"),t(A,"class","logo-container svelte-rfh4mq"),t(L,"href","https://svelte.dev"),t(L,"target","_blank"),t(L,"rel","noreferrer"),t(L,"class","svelte-rfh4mq"),t(b,"class","strong svelte-rfh4mq"),t(se,"class","strong svelte-rfh4mq"),t(le,"class","strong svelte-rfh4mq"),t(Q,"href","#server-side"),t(Q,"class","svelte-rfh4mq"),t(m,"class","svelte-rfh4mq"),t(W,"href","/components"),t(W,"sveltekit:prefetch",""),t(W,"class","svelte-rfh4mq"),t(oe,"class","strong svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(X,"href","/guide#helper-functions"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-rfh4mq"),t(I,"class","svelte-rfh4mq"),t(Y,"href","guide"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-rfh4mq"),t(B,"href","https://github.com/mhkeller/layercake-template"),t(B,"target","_blank"),t(B,"rel","noreferrer"),t(B,"class","svelte-rfh4mq"),t(F,"href","components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-rfh4mq"),t(V,"class","svelte-rfh4mq"),t(E,"id","dek"),t(E,"class","svelte-rfh4mq"),t(ie,"class","svelte-rfh4mq"),t(ce,"class","code-example svelte-rfh4mq"),t(Z,"id","gallery"),t(he,"class","svelte-rfh4mq"),t(R,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(R,"target","_blank"),t(R,"rel","noreferrer"),t(R,"class","svelte-rfh4mq"),t(U,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(U,"target","_blank"),t(U,"rel","noreferrer"),t(U,"class","svelte-rfh4mq"),t(J,"class","svelte-rfh4mq"),t(T,"class","section-hed svelte-rfh4mq"),t(T,"id","server-side"),t(ee,"id","ssr-gallery"),t(y,"class","main svelte-rfh4mq")},m(n,v){e(document.head,h),e(document.head,p),me(n,d,v),me(n,y,v),e(y,A),e(A,C),e(A,k),e(A,H),e(H,D),e(y,r),e(y,E),e(E,m),e(m,$),e(m,L),e(L,u),e(m,S),e(m,b),e(b,z),e(m,N),e(m,se),e(se,Se),e(m,we),e(m,le),e(le,$e),e(m,qe),e(m,Q),e(Q,xe),e(m,Ae),e(E,Le),e(E,I),e(I,Ce),e(I,W),e(W,He),e(I,Ie),e(I,oe),e(oe,Ve),e(I,Pe),e(I,ne),e(ne,De),e(I,Te),e(I,X),e(X,Je),e(I,je),e(E,Ge),e(E,V),e(V,Me),e(V,Y),e(Y,ze),e(V,Ne),e(V,B),e(B,Be),e(V,Re),e(V,F),e(F,Ue),e(V,We),e(y,Xe),e(y,ce),e(ce,ie),ie.innerHTML=Tt,e(y,Ye),e(y,Z);for(let a=0;a<g.length;a+=1)g[a]&&g[a].m(Z,null);e(y,Fe),e(y,T),e(T,he),e(he,Ke),e(T,Oe),e(T,J),e(J,Qe),e(J,R),e(R,Ze),e(J,et),e(J,U),e(U,tt),e(J,at),e(T,rt),e(T,de),e(de,st),e(y,lt),e(y,ee);for(let a=0;a<_.length;a+=1)_[a]&&_[a].m(ee,null);ve=!0},p(n,[v]){if(v&0){te=Lt;let a;for(a=0;a<te.length;a+=1){const j=It(n,te,a);g[a]?(g[a].p(j,v),M(g[a],1)):(g[a]=Vt(j),g[a].c(),M(g[a],1),g[a].m(Z,null))}for(be(),a=te.length;a<g.length;a+=1)Jt(a);ge()}if(v&0){ae=Ct;let a;for(a=0;a<ae.length;a+=1){const j=Ht(n,ae,a);_[a]?(_[a].p(j,v),M(_[a],1)):(_[a]=Pt(j),_[a].c(),M(_[a],1),_[a].m(ee,null))}for(be(),a=ae.length;a<_.length;a+=1)jt(a);ge()}},i(n){if(!ve){for(let v=0;v<te.length;v+=1)M(g[v]);for(let v=0;v<ae.length;v+=1)M(_[v]);ve=!0}},o(n){g=g.filter(Boolean);for(let v=0;v<g.length;v+=1)O(g[v]);_=_.filter(Boolean);for(let v=0;v<_.length;v+=1)O(_[v]);ve=!1},d(n){s(h),s(p),n&&s(d),n&&s(y),xt(g,n),xt(_,n)}}}function Wt(w){return ot.registerLanguage("svelte",At),At(ot),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Ot extends Mt{constructor(h){super(),zt(this,h,Wt,Ut,Nt,{})}}export{Ot as default};

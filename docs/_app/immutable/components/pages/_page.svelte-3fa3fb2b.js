import{S as zt,i as Nt,s as Bt,k as l,a as $,q as c,V as Rt,l as o,h as r,c as j,m as u,r as i,n as t,J as e,b as me,f as z,d as ge,t as O,N as jt,w as _e,x as ye,y as Dt,z as be,g as xe,A as ke,W as Ut}from"../../chunks/index-21aa7309.js";import{H as ot,h as At}from"../../chunks/hljsDefineSvelte-185b3d8f.js";import{e as Lt}from"../../chunks/_examples-5e3fdcf7.js";import{e as Ct}from"../../chunks/_examples_ssr-c0678590.js";function Ht(S,h,d){const v=S.slice();return v[1]=h[d],v}function It(S,h,d){const v=S.slice();return v[1]=h[d],v}function Vt(S){let h,d,v,g=S[1].title+"",A,C,_,H,D,s,k,m;var w=S[1].component;function L(p){return{}}return w&&(s=_e(w,L())),{c(){h=l("div"),d=l("h4"),v=l("a"),A=c(g),C=$(),_=l("a"),H=c("Edit"),D=$(),s&&ye(s.$$.fragment),k=$(),this.h()},l(p){h=o(p,"DIV",{class:!0});var E=u(h);d=o(E,"H4",{class:!0});var x=u(d);v=o(x,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var N=u(v);A=i(N,g),N.forEach(r),C=j(x),_=o(x,"A",{class:!0,href:!0,target:!0,rel:!0});var B=u(_);H=i(B,"Edit"),B.forEach(r),x.forEach(r),D=j(E),s&&Dt(s.$$.fragment,E),k=j(E),E.forEach(r),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href","/example/"+S[1].slug),t(v,"class","svelte-9objxt"),t(_,"class","edit-repl svelte-9objxt"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","noreferrer"),t(d,"class","title svelte-9objxt"),t(h,"class","gallery-item svelte-9objxt")},m(p,E){me(p,h,E),e(h,d),e(d,v),e(v,A),e(d,C),e(d,_),e(_,H),e(h,D),s&&be(s,h,null),e(h,k),m=!0},p(p,E){if(w!==(w=p[1].component)){if(s){xe();const x=s;O(x.$$.fragment,1,0,()=>{ke(x,1)}),ge()}w?(s=_e(w,L()),ye(s.$$.fragment),z(s.$$.fragment,1),be(s,h,k)):s=null}},i(p){m||(s&&z(s.$$.fragment,p),m=!0)},o(p){s&&O(s.$$.fragment,p),m=!1},d(p){p&&r(h),s&&ke(s)}}}function Pt(S){let h,d,v,g=S[1].title+"",A,C,_,H,D,s,k,m;var w=S[1].component;function L(p){return{}}return w&&(s=_e(w,L())),{c(){h=l("div"),d=l("h4"),v=l("a"),A=c(g),C=$(),_=l("a"),H=c("Edit"),D=$(),s&&ye(s.$$.fragment),k=$(),this.h()},l(p){h=o(p,"DIV",{class:!0});var E=u(h);d=o(E,"H4",{class:!0});var x=u(d);v=o(x,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var N=u(v);A=i(N,g),N.forEach(r),C=j(x),_=o(x,"A",{class:!0,href:!0,target:!0,rel:!0});var B=u(_);H=i(B,"Edit"),B.forEach(r),x.forEach(r),D=j(E),s&&Dt(s.$$.fragment,E),k=j(E),E.forEach(r),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href","/example-ssr/"+S[1].slug),t(v,"class","svelte-9objxt"),t(_,"class","edit-repl svelte-9objxt"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","noreferrer"),t(d,"class","title svelte-9objxt"),t(h,"class","gallery-item svelte-9objxt"),Ut(h,"scaled",S[1].title.toLowerCase().includes("map"))},m(p,E){me(p,h,E),e(h,d),e(d,v),e(v,A),e(d,C),e(d,_),e(_,H),e(h,D),s&&be(s,h,null),e(h,k),m=!0},p(p,E){if(w!==(w=p[1].component)){if(s){xe();const x=s;O(x.$$.fragment,1,0,()=>{ke(x,1)}),ge()}w?(s=_e(w,L()),ye(s.$$.fragment),z(s.$$.fragment,1),be(s,h,k)):s=null}},i(p){m||(s&&z(s.$$.fragment,p),m=!0)},o(p){s&&O(s.$$.fragment,p),m=!1},d(p){p&&r(h),s&&ke(s)}}}function Wt(S){let h,d,v,g,A,C,_,H,D,s,k,m,w,L,p,E,x,N,B,re,Ee,Se,le,we,$e,Q,je,Ae,Le,I,Ce,q,He,Ie,oe,Ve,Pe,ne,De,Te,X,Je,Ge,Me,V,ze,Y,Ne,Be,R,Re,Ue,F,We,qe,Xe,ce,ie,Tt=ot.highlight(S[0],{language:"svelte"}).value+"",Ye,Z,Fe,T,he,Ke,Oe,J,Qe,U,Ze,et,W,tt,at,st,ve,rt,lt,ee,fe,te=Lt,y=[];for(let n=0;n<te.length;n+=1)y[n]=Vt(It(S,te,n));const Jt=n=>O(y[n],1,1,()=>{y[n]=null});let ae=Ct,b=[];for(let n=0;n<ae.length;n+=1)b[n]=Pt(Ht(S,ae,n));const Gt=n=>O(b[n],1,1,()=>{b[n]=null});return{c(){h=l("meta"),d=l("meta"),v=$(),g=l("div"),A=l("div"),C=l("div"),_=$(),H=l("h1"),D=c("Layer Cake"),s=$(),k=l("div"),m=l("p"),w=c("Layer Cake is a graphics framework for "),L=l("a"),p=c("Svelte"),E=c(". It uses the measurements of your target div and your data extents to create scales that "),x=l("span"),N=c("stay synced"),B=c(" on layout changes. Use these scales to organize multiple, "),re=l("span"),Ee=c("mostly-reusable Svelte components"),Se=c(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=l("span"),we=c("responsive graphics server-side"),$e=c(" that "),Q=l("a"),je=c("work without JavaScript"),Ae=c("."),Le=$(),I=l("p"),Ce=c("Unlike other libraries, "),q=l("a"),He=c("chart components"),Ie=c(" live "),oe=l("span"),Ve=c("inside your project"),Pe=c(", so you have complete control for "),ne=l("span"),De=c("customization"),Te=c(". It also includes some handy "),X=l("a"),Je=c("helper functions"),Ge=c(" to help format your data into the right shape."),Me=$(),V=l("p"),ze=c("Read the "),Y=l("a"),Ne=c("guide"),Be=c(", try the "),R=l("a"),Re=c("starter template"),Ue=c(" or check out the "),F=l("a"),We=c("example components"),qe=c(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Xe=$(),ce=l("div"),ie=l("pre"),Ye=$(),Z=l("div");for(let n=0;n<y.length;n+=1)y[n].c();Fe=$(),T=l("div"),he=l("h2"),Ke=c("Server-side rendering"),Oe=$(),J=l("p"),Qe=c("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),U=l("a"),Ze=c("viewBox"),et=c(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),W=l("a"),tt=c("this blog post"),at=c("."),st=$(),ve=l("p"),rt=c("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),lt=$(),ee=l("div");for(let n=0;n<b.length;n+=1)b[n].c();this.h()},l(n){const f=Rt("svelte-ep3aok",document.head);h=o(f,"META",{name:!0,content:!0}),d=o(f,"META",{name:!0,content:!0}),f.forEach(r),v=j(n),g=o(n,"DIV",{class:!0});var a=u(g);A=o(a,"DIV",{class:!0});var G=u(A);C=o(G,"DIV",{id:!0,class:!0}),u(C).forEach(r),_=j(G),H=o(G,"H1",{class:!0});var nt=u(H);D=i(nt,"Layer Cake"),nt.forEach(r),G.forEach(r),s=j(a),k=o(a,"DIV",{id:!0,class:!0});var ue=u(k);m=o(ue,"P",{class:!0});var P=u(m);w=i(P,"Layer Cake is a graphics framework for "),L=o(P,"A",{href:!0,target:!0,rel:!0,class:!0});var ct=u(L);p=i(ct,"Svelte"),ct.forEach(r),E=i(P,". It uses the measurements of your target div and your data extents to create scales that "),x=o(P,"SPAN",{class:!0});var it=u(x);N=i(it,"stay synced"),it.forEach(r),B=i(P," on layout changes. Use these scales to organize multiple, "),re=o(P,"SPAN",{class:!0});var ht=u(re);Ee=i(ht,"mostly-reusable Svelte components"),ht.forEach(r),Se=i(P,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o(P,"SPAN",{class:!0});var ut=u(le);we=i(ut,"responsive graphics server-side"),ut.forEach(r),$e=i(P," that "),Q=o(P,"A",{href:!0,class:!0});var pt=u(Q);je=i(pt,"work without JavaScript"),pt.forEach(r),Ae=i(P,"."),P.forEach(r),Le=j(ue),I=o(ue,"P",{class:!0});var M=u(I);Ce=i(M,"Unlike other libraries, "),q=o(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var dt=u(q);He=i(dt,"chart components"),dt.forEach(r),Ie=i(M," live "),oe=o(M,"SPAN",{class:!0});var vt=u(oe);Ve=i(vt,"inside your project"),vt.forEach(r),Pe=i(M,", so you have complete control for "),ne=o(M,"SPAN",{class:!0});var ft=u(ne);De=i(ft,"customization"),ft.forEach(r),Te=i(M,". It also includes some handy "),X=o(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var mt=u(X);Je=i(mt,"helper functions"),mt.forEach(r),Ge=i(M," to help format your data into the right shape."),M.forEach(r),Me=j(ue),V=o(ue,"P",{class:!0});var K=u(V);ze=i(K,"Read the "),Y=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var gt=u(Y);Ne=i(gt,"guide"),gt.forEach(r),Be=i(K,", try the "),R=o(K,"A",{href:!0,target:!0,rel:!0,class:!0});var _t=u(R);Re=i(_t,"starter template"),_t.forEach(r),Ue=i(K," or check out the "),F=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=u(F);We=i(yt,"example components"),yt.forEach(r),qe=i(K,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),K.forEach(r),ue.forEach(r),Xe=j(a),ce=o(a,"DIV",{class:!0});var bt=u(ce);ie=o(bt,"PRE",{class:!0});var Mt=u(ie);Mt.forEach(r),bt.forEach(r),Ye=j(a),Z=o(a,"DIV",{id:!0});var xt=u(Z);for(let se=0;se<y.length;se+=1)y[se].l(xt);xt.forEach(r),Fe=j(a),T=o(a,"DIV",{class:!0,id:!0});var pe=u(T);he=o(pe,"H2",{class:!0});var kt=u(he);Ke=i(kt,"Server-side rendering"),kt.forEach(r),Oe=j(pe),J=o(pe,"P",{class:!0});var de=u(J);Qe=i(de,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),U=o(de,"A",{href:!0,target:!0,rel:!0,class:!0});var Et=u(U);Ze=i(Et,"viewBox"),Et.forEach(r),et=i(de," and CSS settings that Rich Harris, Svelte's creator, outlined in "),W=o(de,"A",{href:!0,target:!0,rel:!0,class:!0});var St=u(W);tt=i(St,"this blog post"),St.forEach(r),at=i(de,"."),de.forEach(r),st=j(pe),ve=o(pe,"P",{});var wt=u(ve);rt=i(wt,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),wt.forEach(r),pe.forEach(r),lt=j(a),ee=o(a,"DIV",{id:!0});var $t=u(ee);for(let se=0;se<b.length;se+=1)b[se].l($t);$t.forEach(r),a.forEach(r),this.h()},h(){document.title="Layer Cake",t(h,"name","og:title"),t(h,"content","Layer Cake"),t(d,"name","twitter:title"),t(d,"content","Layer Cake"),t(C,"id","logo"),t(C,"class","svelte-9objxt"),t(H,"class","svelte-9objxt"),t(A,"class","logo-container svelte-9objxt"),t(L,"href","https://svelte.dev"),t(L,"target","_blank"),t(L,"rel","noreferrer"),t(L,"class","svelte-9objxt"),t(x,"class","strong svelte-9objxt"),t(re,"class","strong svelte-9objxt"),t(le,"class","strong svelte-9objxt"),t(Q,"href","#server-side"),t(Q,"class","svelte-9objxt"),t(m,"class","svelte-9objxt"),t(q,"href","/components"),t(q,"sveltekit:prefetch",""),t(q,"class","svelte-9objxt"),t(oe,"class","strong svelte-9objxt"),t(ne,"class","strong svelte-9objxt"),t(X,"href","/guide#helper-functions"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-9objxt"),t(I,"class","svelte-9objxt"),t(Y,"href","guide"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-9objxt"),t(R,"href","https://github.com/mhkeller/layercake-template"),t(R,"target","_blank"),t(R,"rel","noreferrer"),t(R,"class","svelte-9objxt"),t(F,"href","components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-9objxt"),t(V,"class","svelte-9objxt"),t(k,"id","dek"),t(k,"class","svelte-9objxt"),t(ie,"class","svelte-9objxt"),t(ce,"class","code-example svelte-9objxt"),t(Z,"id","gallery"),t(he,"class","svelte-9objxt"),t(U,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(U,"target","_blank"),t(U,"rel","noreferrer"),t(U,"class","svelte-9objxt"),t(W,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(W,"target","_blank"),t(W,"rel","noreferrer"),t(W,"class","svelte-9objxt"),t(J,"class","svelte-9objxt"),t(T,"class","section-hed svelte-9objxt"),t(T,"id","server-side"),t(ee,"id","ssr-gallery"),t(g,"class","main svelte-9objxt")},m(n,f){e(document.head,h),e(document.head,d),me(n,v,f),me(n,g,f),e(g,A),e(A,C),e(A,_),e(A,H),e(H,D),e(g,s),e(g,k),e(k,m),e(m,w),e(m,L),e(L,p),e(m,E),e(m,x),e(x,N),e(m,B),e(m,re),e(re,Ee),e(m,Se),e(m,le),e(le,we),e(m,$e),e(m,Q),e(Q,je),e(m,Ae),e(k,Le),e(k,I),e(I,Ce),e(I,q),e(q,He),e(I,Ie),e(I,oe),e(oe,Ve),e(I,Pe),e(I,ne),e(ne,De),e(I,Te),e(I,X),e(X,Je),e(I,Ge),e(k,Me),e(k,V),e(V,ze),e(V,Y),e(Y,Ne),e(V,Be),e(V,R),e(R,Re),e(V,Ue),e(V,F),e(F,We),e(V,qe),e(g,Xe),e(g,ce),e(ce,ie),ie.innerHTML=Tt,e(g,Ye),e(g,Z);for(let a=0;a<y.length;a+=1)y[a].m(Z,null);e(g,Fe),e(g,T),e(T,he),e(he,Ke),e(T,Oe),e(T,J),e(J,Qe),e(J,U),e(U,Ze),e(J,et),e(J,W),e(W,tt),e(J,at),e(T,st),e(T,ve),e(ve,rt),e(g,lt),e(g,ee);for(let a=0;a<b.length;a+=1)b[a].m(ee,null);fe=!0},p(n,[f]){if(f&0){te=Lt;let a;for(a=0;a<te.length;a+=1){const G=It(n,te,a);y[a]?(y[a].p(G,f),z(y[a],1)):(y[a]=Vt(G),y[a].c(),z(y[a],1),y[a].m(Z,null))}for(xe(),a=te.length;a<y.length;a+=1)Jt(a);ge()}if(f&0){ae=Ct;let a;for(a=0;a<ae.length;a+=1){const G=Ht(n,ae,a);b[a]?(b[a].p(G,f),z(b[a],1)):(b[a]=Pt(G),b[a].c(),z(b[a],1),b[a].m(ee,null))}for(xe(),a=ae.length;a<b.length;a+=1)Gt(a);ge()}},i(n){if(!fe){for(let f=0;f<te.length;f+=1)z(y[f]);for(let f=0;f<ae.length;f+=1)z(b[f]);fe=!0}},o(n){y=y.filter(Boolean);for(let f=0;f<y.length;f+=1)O(y[f]);b=b.filter(Boolean);for(let f=0;f<b.length;f+=1)O(b[f]);fe=!1},d(n){r(h),r(d),n&&r(v),n&&r(g),jt(y,n),jt(b,n)}}}function qt(S){return ot.registerLanguage("svelte",At),At(ot),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Ot extends zt{constructor(h){super(),Nt(this,h,qt,Wt,Bt,{})}}export{Ot as default};

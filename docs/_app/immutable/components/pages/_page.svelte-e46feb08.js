import{S as Mt,i as zt,s as Nt,k as l,a as q,q as c,aa as Bt,l as o,h as r,c as x,m as f,r as i,n as t,J as e,b as me,f as M,d as ge,t as O,N as xt,v as _e,w as ye,x as Dt,y as ke,g as we,z as be,a3 as Rt}from"../../chunks/index-bab5e66b.js";import{H as ot,h as At}from"../../chunks/hljsDefineSvelte-185b3d8f.js";import{e as Lt}from"../../chunks/_examples-e272ef73.js";import{e as Ct}from"../../chunks/_examples_ssr-0ff7908e.js";function Ht(S,h,u){const p=S.slice();return p[1]=h[u],p}function It(S,h,u){const p=S.slice();return p[1]=h[u],p}function Vt(S){let h,u,p,g=S[1].title+"",A,C,_,H,D,s,b,m;var $=S[1].component;function L(d){return{}}return $&&(s=_e($,L())),{c(){h=l("div"),u=l("h4"),p=l("a"),A=c(g),C=q(),_=l("a"),H=c("Edit"),D=q(),s&&ye(s.$$.fragment),b=q(),this.h()},l(d){h=o(d,"DIV",{class:!0});var E=f(h);u=o(E,"H4",{class:!0});var w=f(u);p=o(w,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var z=f(p);A=i(z,g),z.forEach(r),C=x(w),_=o(w,"A",{class:!0,href:!0,target:!0,rel:!0});var N=f(_);H=i(N,"Edit"),N.forEach(r),w.forEach(r),D=x(E),s&&Dt(s.$$.fragment,E),b=x(E),E.forEach(r),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href","/example/"+S[1].slug),t(p,"class","svelte-rfh4mq"),t(_,"class","edit-repl svelte-rfh4mq"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","nofollow"),t(u,"class","title svelte-rfh4mq"),t(h,"class","gallery-item svelte-rfh4mq")},m(d,E){me(d,h,E),e(h,u),e(u,p),e(p,A),e(u,C),e(u,_),e(_,H),e(h,D),s&&ke(s,h,null),e(h,b),m=!0},p(d,E){if($!==($=d[1].component)){if(s){we();const w=s;O(w.$$.fragment,1,0,()=>{be(w,1)}),ge()}$?(s=_e($,L()),ye(s.$$.fragment),M(s.$$.fragment,1),ke(s,h,b)):s=null}},i(d){m||(s&&M(s.$$.fragment,d),m=!0)},o(d){s&&O(s.$$.fragment,d),m=!1},d(d){d&&r(h),s&&be(s)}}}function Pt(S){let h,u,p,g=S[1].title+"",A,C,_,H,D,s,b,m;var $=S[1].component;function L(d){return{}}return $&&(s=_e($,L())),{c(){h=l("div"),u=l("h4"),p=l("a"),A=c(g),C=q(),_=l("a"),H=c("Edit"),D=q(),s&&ye(s.$$.fragment),b=q(),this.h()},l(d){h=o(d,"DIV",{class:!0});var E=f(h);u=o(E,"H4",{class:!0});var w=f(u);p=o(w,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var z=f(p);A=i(z,g),z.forEach(r),C=x(w),_=o(w,"A",{class:!0,href:!0,target:!0,rel:!0});var N=f(_);H=i(N,"Edit"),N.forEach(r),w.forEach(r),D=x(E),s&&Dt(s.$$.fragment,E),b=x(E),E.forEach(r),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href","/example-ssr/"+S[1].slug),t(p,"class","svelte-rfh4mq"),t(_,"class","edit-repl svelte-rfh4mq"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","nofollow"),t(u,"class","title svelte-rfh4mq"),t(h,"class","gallery-item svelte-rfh4mq"),Rt(h,"scaled",S[1].title.toLowerCase().includes("map"))},m(d,E){me(d,h,E),e(h,u),e(u,p),e(p,A),e(u,C),e(u,_),e(_,H),e(h,D),s&&ke(s,h,null),e(h,b),m=!0},p(d,E){if($!==($=d[1].component)){if(s){we();const w=s;O(w.$$.fragment,1,0,()=>{be(w,1)}),ge()}$?(s=_e($,L()),ye(s.$$.fragment),M(s.$$.fragment,1),ke(s,h,b)):s=null}},i(d){m||(s&&M(s.$$.fragment,d),m=!0)},o(d){s&&O(s.$$.fragment,d),m=!1},d(d){d&&r(h),s&&be(s)}}}function Ut(S){let h,u,p,g,A,C,_,H,D,s,b,m,$,L,d,E,w,z,N,re,Ee,Se,le,$e,qe,Q,xe,Ae,Le,V,Ce,W,He,Ie,oe,Ve,Pe,ne,De,Te,Je,I,je,X,Ge,Me,B,ze,Ne,Y,Be,Re,F,Ue,We,Xe,ce,ie,Tt=ot.highlight(S[0],{language:"svelte"}).value+"",Ye,Z,Fe,T,he,Ke,Oe,J,Qe,R,Ze,et,U,tt,at,st,pe,rt,lt,ee,ve,te=Lt,y=[];for(let n=0;n<te.length;n+=1)y[n]=Vt(It(S,te,n));const Jt=n=>O(y[n],1,1,()=>{y[n]=null});let ae=Ct,k=[];for(let n=0;n<ae.length;n+=1)k[n]=Pt(Ht(S,ae,n));const jt=n=>O(k[n],1,1,()=>{k[n]=null});return{c(){h=l("meta"),u=l("meta"),p=q(),g=l("div"),A=l("div"),C=l("div"),_=q(),H=l("h1"),D=c("Layer Cake"),s=q(),b=l("div"),m=l("p"),$=c("Layer Cake is a graphics framework for "),L=l("a"),d=c("Svelte"),E=c(". It uses the measurements of your target div and your data extents to create scales that "),w=l("span"),z=c("stay synced"),N=c(" on layout changes. Use these scales to organize multiple, "),re=l("span"),Ee=c("mostly-reusable Svelte components"),Se=c(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=l("span"),$e=c("responsive graphics server-side"),qe=c(" that "),Q=l("a"),xe=c("work without JavaScript"),Ae=c("."),Le=q(),V=l("p"),Ce=c("Unlike other libraries, "),W=l("a"),He=c("chart components"),Ie=c(" live "),oe=l("span"),Ve=c("inside your project"),Pe=c(", so you have complete control for "),ne=l("span"),De=c("customization"),Te=c(". It also includes some handy transformation components to help format your data into the right shape."),Je=q(),I=l("p"),je=c("Read the "),X=l("a"),Ge=c("guide"),Me=c(", try the "),B=l("a"),ze=c("starter template"),Ne=c(" or check out "),Y=l("a"),Be=c("transform"),Re=c(" and "),F=l("a"),Ue=c("example components"),We=c(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Xe=q(),ce=l("div"),ie=l("pre"),Ye=q(),Z=l("div");for(let n=0;n<y.length;n+=1)y[n].c();Fe=q(),T=l("div"),he=l("h2"),Ke=c("Server-side rendering"),Oe=q(),J=l("p"),Qe=c("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=l("a"),Ze=c("viewBox"),et=c(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=l("a"),tt=c("this blog post"),at=c("."),st=q(),pe=l("p"),rt=c("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),lt=q(),ee=l("div");for(let n=0;n<k.length;n+=1)k[n].c();this.h()},l(n){const v=Bt("svelte-ep3aok",document.head);h=o(v,"META",{name:!0,content:!0}),u=o(v,"META",{name:!0,content:!0}),v.forEach(r),p=x(n),g=o(n,"DIV",{class:!0});var a=f(g);A=o(a,"DIV",{class:!0});var j=f(A);C=o(j,"DIV",{id:!0,class:!0}),f(C).forEach(r),_=x(j),H=o(j,"H1",{class:!0});var nt=f(H);D=i(nt,"Layer Cake"),nt.forEach(r),j.forEach(r),s=x(a),b=o(a,"DIV",{id:!0,class:!0});var fe=f(b);m=o(fe,"P",{class:!0});var P=f(m);$=i(P,"Layer Cake is a graphics framework for "),L=o(P,"A",{href:!0,target:!0,rel:!0,class:!0});var ct=f(L);d=i(ct,"Svelte"),ct.forEach(r),E=i(P,". It uses the measurements of your target div and your data extents to create scales that "),w=o(P,"SPAN",{class:!0});var it=f(w);z=i(it,"stay synced"),it.forEach(r),N=i(P," on layout changes. Use these scales to organize multiple, "),re=o(P,"SPAN",{class:!0});var ht=f(re);Ee=i(ht,"mostly-reusable Svelte components"),ht.forEach(r),Se=i(P,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o(P,"SPAN",{class:!0});var ft=f(le);$e=i(ft,"responsive graphics server-side"),ft.forEach(r),qe=i(P," that "),Q=o(P,"A",{href:!0,class:!0});var dt=f(Q);xe=i(dt,"work without JavaScript"),dt.forEach(r),Ae=i(P,"."),P.forEach(r),Le=x(fe),V=o(fe,"P",{class:!0});var K=f(V);Ce=i(K,"Unlike other libraries, "),W=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var ut=f(W);He=i(ut,"chart components"),ut.forEach(r),Ie=i(K," live "),oe=o(K,"SPAN",{class:!0});var pt=f(oe);Ve=i(pt,"inside your project"),pt.forEach(r),Pe=i(K,", so you have complete control for "),ne=o(K,"SPAN",{class:!0});var vt=f(ne);De=i(vt,"customization"),vt.forEach(r),Te=i(K,". It also includes some handy transformation components to help format your data into the right shape."),K.forEach(r),Je=x(fe),I=o(fe,"P",{class:!0});var G=f(I);je=i(G,"Read the "),X=o(G,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var mt=f(X);Ge=i(mt,"guide"),mt.forEach(r),Me=i(G,", try the "),B=o(G,"A",{href:!0,target:!0,rel:!0,class:!0});var gt=f(B);ze=i(gt,"starter template"),gt.forEach(r),Ne=i(G," or check out "),Y=o(G,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var _t=f(Y);Be=i(_t,"transform"),_t.forEach(r),Re=i(G," and "),F=o(G,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=f(F);Ue=i(yt,"example components"),yt.forEach(r),We=i(G,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),G.forEach(r),fe.forEach(r),Xe=x(a),ce=o(a,"DIV",{class:!0});var kt=f(ce);ie=o(kt,"PRE",{class:!0});var Gt=f(ie);Gt.forEach(r),kt.forEach(r),Ye=x(a),Z=o(a,"DIV",{id:!0});var wt=f(Z);for(let se=0;se<y.length;se+=1)y[se].l(wt);wt.forEach(r),Fe=x(a),T=o(a,"DIV",{class:!0,id:!0});var de=f(T);he=o(de,"H2",{class:!0});var bt=f(he);Ke=i(bt,"Server-side rendering"),bt.forEach(r),Oe=x(de),J=o(de,"P",{class:!0});var ue=f(J);Qe=i(ue,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=o(ue,"A",{href:!0,target:!0,rel:!0,class:!0});var Et=f(R);Ze=i(Et,"viewBox"),Et.forEach(r),et=i(ue," and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=o(ue,"A",{href:!0,target:!0,rel:!0,class:!0});var St=f(U);tt=i(St,"this blog post"),St.forEach(r),at=i(ue,"."),ue.forEach(r),st=x(de),pe=o(de,"P",{});var $t=f(pe);rt=i($t,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),$t.forEach(r),de.forEach(r),lt=x(a),ee=o(a,"DIV",{id:!0});var qt=f(ee);for(let se=0;se<k.length;se+=1)k[se].l(qt);qt.forEach(r),a.forEach(r),this.h()},h(){document.title="Layer Cake",t(h,"name","og:title"),t(h,"content","Layer Cake"),t(u,"name","twitter:title"),t(u,"content","Layer Cake"),t(C,"id","logo"),t(C,"class","svelte-rfh4mq"),t(H,"class","svelte-rfh4mq"),t(A,"class","logo-container svelte-rfh4mq"),t(L,"href","https://svelte.dev"),t(L,"target","_blank"),t(L,"rel","noopener"),t(L,"class","svelte-rfh4mq"),t(w,"class","strong svelte-rfh4mq"),t(re,"class","strong svelte-rfh4mq"),t(le,"class","strong svelte-rfh4mq"),t(Q,"href","#server-side"),t(Q,"class","svelte-rfh4mq"),t(m,"class","svelte-rfh4mq"),t(W,"href","/components"),t(W,"sveltekit:prefetch",""),t(W,"class","svelte-rfh4mq"),t(oe,"class","strong svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(V,"class","svelte-rfh4mq"),t(X,"href","guide"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-rfh4mq"),t(B,"href","https://github.com/mhkeller/layercake-template"),t(B,"target","_blank"),t(B,"rel","nofollow"),t(B,"class","svelte-rfh4mq"),t(Y,"href","guide"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-rfh4mq"),t(F,"href","components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-rfh4mq"),t(I,"class","svelte-rfh4mq"),t(b,"id","dek"),t(b,"class","svelte-rfh4mq"),t(ie,"class","svelte-rfh4mq"),t(ce,"class","code-example svelte-rfh4mq"),t(Z,"id","gallery"),t(he,"class","svelte-rfh4mq"),t(R,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(R,"target","_blank"),t(R,"rel","nofollow"),t(R,"class","svelte-rfh4mq"),t(U,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(U,"target","_blank"),t(U,"rel","nofollow"),t(U,"class","svelte-rfh4mq"),t(J,"class","svelte-rfh4mq"),t(T,"class","section-hed svelte-rfh4mq"),t(T,"id","server-side"),t(ee,"id","ssr-gallery"),t(g,"class","main svelte-rfh4mq")},m(n,v){e(document.head,h),e(document.head,u),me(n,p,v),me(n,g,v),e(g,A),e(A,C),e(A,_),e(A,H),e(H,D),e(g,s),e(g,b),e(b,m),e(m,$),e(m,L),e(L,d),e(m,E),e(m,w),e(w,z),e(m,N),e(m,re),e(re,Ee),e(m,Se),e(m,le),e(le,$e),e(m,qe),e(m,Q),e(Q,xe),e(m,Ae),e(b,Le),e(b,V),e(V,Ce),e(V,W),e(W,He),e(V,Ie),e(V,oe),e(oe,Ve),e(V,Pe),e(V,ne),e(ne,De),e(V,Te),e(b,Je),e(b,I),e(I,je),e(I,X),e(X,Ge),e(I,Me),e(I,B),e(B,ze),e(I,Ne),e(I,Y),e(Y,Be),e(I,Re),e(I,F),e(F,Ue),e(I,We),e(g,Xe),e(g,ce),e(ce,ie),ie.innerHTML=Tt,e(g,Ye),e(g,Z);for(let a=0;a<y.length;a+=1)y[a].m(Z,null);e(g,Fe),e(g,T),e(T,he),e(he,Ke),e(T,Oe),e(T,J),e(J,Qe),e(J,R),e(R,Ze),e(J,et),e(J,U),e(U,tt),e(J,at),e(T,st),e(T,pe),e(pe,rt),e(g,lt),e(g,ee);for(let a=0;a<k.length;a+=1)k[a].m(ee,null);ve=!0},p(n,[v]){if(v&0){te=Lt;let a;for(a=0;a<te.length;a+=1){const j=It(n,te,a);y[a]?(y[a].p(j,v),M(y[a],1)):(y[a]=Vt(j),y[a].c(),M(y[a],1),y[a].m(Z,null))}for(we(),a=te.length;a<y.length;a+=1)Jt(a);ge()}if(v&0){ae=Ct;let a;for(a=0;a<ae.length;a+=1){const j=Ht(n,ae,a);k[a]?(k[a].p(j,v),M(k[a],1)):(k[a]=Pt(j),k[a].c(),M(k[a],1),k[a].m(ee,null))}for(we(),a=ae.length;a<k.length;a+=1)jt(a);ge()}},i(n){if(!ve){for(let v=0;v<te.length;v+=1)M(y[v]);for(let v=0;v<ae.length;v+=1)M(k[v]);ve=!0}},o(n){y=y.filter(Boolean);for(let v=0;v<y.length;v+=1)O(y[v]);k=k.filter(Boolean);for(let v=0;v<k.length;v+=1)O(k[v]);ve=!1},d(n){r(h),r(u),n&&r(p),n&&r(g),xt(y,n),xt(k,n)}}}function Wt(S){return ot.registerLanguage("svelte",At),At(ot),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Ot extends Mt{constructor(h){super(),zt(this,h,Wt,Ut,Nt,{})}}export{Ot as default};

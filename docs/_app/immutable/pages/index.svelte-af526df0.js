import{S as Nt,i as Ut,s as Wt,l as n,a as q,r as l,ac as Xt,m as c,h as r,c as x,n as h,u as o,p as t,O as e,b as ge,f as z,d as _e,t as Q,T as Ht,w as ye,x as ke,y as Jt,z as we,g as be,C as Ee,a6 as Yt}from"../chunks/index-ce1a03b6.js";import{H as it,h as It}from"../chunks/hljsDefineSvelte-22ce01cd.js";import{e as Vt}from"../chunks/_examples-c7478354.js";import{e as Pt}from"../chunks/_examples_ssr-9d9bb68f.js";import"../chunks/Brush.html-7c1bd33d.js";import"../chunks/index-eae88fad.js";import"../chunks/dots-c2530e0c.js";import"../chunks/pointsFour-0a0dc1f2.js";import"../chunks/ClevelandDotPlot.percent-range.html-b12fbca6.js";function Dt(S,f,u){const d=S.slice();return d[1]=f[u],d}function Tt(S,f,u){const d=S.slice();return d[1]=f[u],d}function jt(S){let f,u,d,g=S[1].title+"",A,C,_,H,D,s,b,v;var $=S[1].component;function L(p){return{}}return $&&(s=ye($,L())),{c(){f=n("div"),u=n("h4"),d=n("a"),A=l(g),C=q(),_=n("a"),H=l("Edit"),D=q(),s&&ke(s.$$.fragment),b=q(),this.h()},l(p){f=c(p,"DIV",{class:!0});var E=h(f);u=c(E,"H4",{class:!0});var w=h(u);d=c(w,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var R=h(d);A=o(R,g),R.forEach(r),C=x(w),_=c(w,"A",{class:!0,href:!0,target:!0,rel:!0});var B=h(_);H=o(B,"Edit"),B.forEach(r),w.forEach(r),D=x(E),s&&Jt(s.$$.fragment,E),b=x(E),E.forEach(r),this.h()},h(){t(d,"sveltekit:prefetch",""),t(d,"href","/example/"+S[1].slug),t(d,"class","svelte-rfh4mq"),t(_,"class","edit-repl svelte-rfh4mq"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","nofollow"),t(u,"class","title svelte-rfh4mq"),t(f,"class","gallery-item svelte-rfh4mq")},m(p,E){ge(p,f,E),e(f,u),e(u,d),e(d,A),e(u,C),e(u,_),e(_,H),e(f,D),s&&we(s,f,null),e(f,b),v=!0},p(p,E){if($!==($=p[1].component)){if(s){be();const w=s;Q(w.$$.fragment,1,0,()=>{Ee(w,1)}),_e()}$?(s=ye($,L()),ke(s.$$.fragment),z(s.$$.fragment,1),we(s,f,b)):s=null}},i(p){v||(s&&z(s.$$.fragment,p),v=!0)},o(p){s&&Q(s.$$.fragment,p),v=!1},d(p){p&&r(f),s&&Ee(s)}}}function Gt(S){let f,u,d,g=S[1].title+"",A,C,_,H,D,s,b,v;var $=S[1].component;function L(p){return{}}return $&&(s=ye($,L())),{c(){f=n("div"),u=n("h4"),d=n("a"),A=l(g),C=q(),_=n("a"),H=l("Edit"),D=q(),s&&ke(s.$$.fragment),b=q(),this.h()},l(p){f=c(p,"DIV",{class:!0});var E=h(f);u=c(E,"H4",{class:!0});var w=h(u);d=c(w,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var R=h(d);A=o(R,g),R.forEach(r),C=x(w),_=c(w,"A",{class:!0,href:!0,target:!0,rel:!0});var B=h(_);H=o(B,"Edit"),B.forEach(r),w.forEach(r),D=x(E),s&&Jt(s.$$.fragment,E),b=x(E),E.forEach(r),this.h()},h(){t(d,"sveltekit:prefetch",""),t(d,"href","/example-ssr/"+S[1].slug),t(d,"class","svelte-rfh4mq"),t(_,"class","edit-repl svelte-rfh4mq"),t(_,"href","https://svelte.dev/repl/"+S[1].replPath),t(_,"target","_blank"),t(_,"rel","nofollow"),t(u,"class","title svelte-rfh4mq"),t(f,"class","gallery-item svelte-rfh4mq"),Yt(f,"scaled",S[1].title.toLowerCase().includes("map"))},m(p,E){ge(p,f,E),e(f,u),e(u,d),e(d,A),e(u,C),e(u,_),e(_,H),e(f,D),s&&we(s,f,null),e(f,b),v=!0},p(p,E){if($!==($=p[1].component)){if(s){be();const w=s;Q(w.$$.fragment,1,0,()=>{Ee(w,1)}),_e()}$?(s=ye($,L()),ke(s.$$.fragment),z(s.$$.fragment,1),we(s,f,b)):s=null}},i(p){v||(s&&z(s.$$.fragment,p),v=!0)},o(p){s&&Q(s.$$.fragment,p),v=!1},d(p){p&&r(f),s&&Ee(s)}}}function Ft(S){let f,u,d,g,A,C,_,H,D,s,b,v,$,L,p,E,w,R,B,le,Se,$e,oe,qe,xe,Z,Ae,Le,Ce,I,He,X,Ie,Ve,ne,Pe,De,ce,Te,je,Y,Ge,Je,Me,V,ze,F,Re,Be,N,Ne,Ue,O,We,Xe,K,Ye,Fe,Oe,ie,he,Mt=it.highlight(S[0],{language:"svelte"}).value+"",Ke,ee,Qe,T,fe,Ze,et,j,tt,U,at,rt,W,st,lt,ot,me,nt,ct,te,ve,ae=Vt,y=[];for(let i=0;i<ae.length;i+=1)y[i]=jt(Tt(S,ae,i));const zt=i=>Q(y[i],1,1,()=>{y[i]=null});let re=Pt,k=[];for(let i=0;i<re.length;i+=1)k[i]=Gt(Dt(S,re,i));const Rt=i=>Q(k[i],1,1,()=>{k[i]=null});return{c(){f=n("meta"),u=n("meta"),d=q(),g=n("div"),A=n("div"),C=n("div"),_=q(),H=n("h1"),D=l("Layer Cake"),s=q(),b=n("div"),v=n("p"),$=l("Layer Cake is a graphics framework for "),L=n("a"),p=l("Svelte"),E=l(". It uses the measurements of your target div and your data extents to create scales that "),w=n("span"),R=l("stay synced"),B=l(" on layout changes. Use these scales to organize multiple, "),le=n("span"),Se=l("mostly-reusable Svelte components"),$e=l(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),oe=n("span"),qe=l("responsive graphics server-side"),xe=l(" that "),Z=n("a"),Ae=l("work without JavaScript"),Le=l("."),Ce=q(),I=n("p"),He=l("Unlike other libraries, "),X=n("a"),Ie=l("chart components"),Ve=l(" live "),ne=n("span"),Pe=l("inside your project"),De=l(", so you have complete control for "),ce=n("span"),Te=l("customization"),je=l(". It also includes some handy "),Y=n("a"),Ge=l("transformation components"),Je=l(" to help format your data into the right shape."),Me=q(),V=n("p"),ze=l("Read the "),F=n("a"),Re=l("guide"),Be=l(", try the "),N=n("a"),Ne=l("starter template"),Ue=l(" or check out "),O=n("a"),We=l("transform"),Xe=l(" and "),K=n("a"),Ye=l("example components"),Fe=l(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Oe=q(),ie=n("div"),he=n("pre"),Ke=q(),ee=n("div");for(let i=0;i<y.length;i+=1)y[i].c();Qe=q(),T=n("div"),fe=n("h2"),Ze=l("Server-side rendering"),et=q(),j=n("p"),tt=l("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),U=n("a"),at=l("viewBox"),rt=l(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),W=n("a"),st=l("this blog post"),lt=l("."),ot=q(),me=n("p"),nt=l("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),ct=q(),te=n("div");for(let i=0;i<k.length;i+=1)k[i].c();this.h()},l(i){const m=Xt("svelte-ep3aok",document.head);f=c(m,"META",{name:!0,content:!0}),u=c(m,"META",{name:!0,content:!0}),m.forEach(r),d=x(i),g=c(i,"DIV",{class:!0});var a=h(g);A=c(a,"DIV",{class:!0});var G=h(A);C=c(G,"DIV",{id:!0,class:!0}),h(C).forEach(r),_=x(G),H=c(G,"H1",{class:!0});var ht=h(H);D=o(ht,"Layer Cake"),ht.forEach(r),G.forEach(r),s=x(a),b=c(a,"DIV",{id:!0,class:!0});var pe=h(b);v=c(pe,"P",{class:!0});var P=h(v);$=o(P,"Layer Cake is a graphics framework for "),L=c(P,"A",{href:!0,target:!0,rel:!0,class:!0});var ft=h(L);p=o(ft,"Svelte"),ft.forEach(r),E=o(P,". It uses the measurements of your target div and your data extents to create scales that "),w=c(P,"SPAN",{class:!0});var pt=h(w);R=o(pt,"stay synced"),pt.forEach(r),B=o(P," on layout changes. Use these scales to organize multiple, "),le=c(P,"SPAN",{class:!0});var ut=h(le);Se=o(ut,"mostly-reusable Svelte components"),ut.forEach(r),$e=o(P,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),oe=c(P,"SPAN",{class:!0});var dt=h(oe);qe=o(dt,"responsive graphics server-side"),dt.forEach(r),xe=o(P," that "),Z=c(P,"A",{href:!0,class:!0});var mt=h(Z);Ae=o(mt,"work without JavaScript"),mt.forEach(r),Le=o(P,"."),P.forEach(r),Ce=x(pe),I=c(pe,"P",{class:!0});var J=h(I);He=o(J,"Unlike other libraries, "),X=c(J,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var vt=h(X);Ie=o(vt,"chart components"),vt.forEach(r),Ve=o(J," live "),ne=c(J,"SPAN",{class:!0});var gt=h(ne);Pe=o(gt,"inside your project"),gt.forEach(r),De=o(J,", so you have complete control for "),ce=c(J,"SPAN",{class:!0});var _t=h(ce);Te=o(_t,"customization"),_t.forEach(r),je=o(J,". It also includes some handy "),Y=c(J,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=h(Y);Ge=o(yt,"transformation components"),yt.forEach(r),Je=o(J," to help format your data into the right shape."),J.forEach(r),Me=x(pe),V=c(pe,"P",{class:!0});var M=h(V);ze=o(M,"Read the "),F=c(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var kt=h(F);Re=o(kt,"guide"),kt.forEach(r),Be=o(M,", try the "),N=c(M,"A",{href:!0,target:!0,rel:!0,class:!0});var wt=h(N);Ne=o(wt,"starter template"),wt.forEach(r),Ue=o(M," or check out "),O=c(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var bt=h(O);We=o(bt,"transform"),bt.forEach(r),Xe=o(M," and "),K=c(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var Et=h(K);Ye=o(Et,"example components"),Et.forEach(r),Fe=o(M,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),M.forEach(r),pe.forEach(r),Oe=x(a),ie=c(a,"DIV",{class:!0});var St=h(ie);he=c(St,"PRE",{class:!0});var Bt=h(he);Bt.forEach(r),St.forEach(r),Ke=x(a),ee=c(a,"DIV",{id:!0});var $t=h(ee);for(let se=0;se<y.length;se+=1)y[se].l($t);$t.forEach(r),Qe=x(a),T=c(a,"DIV",{class:!0,id:!0});var ue=h(T);fe=c(ue,"H2",{class:!0});var qt=h(fe);Ze=o(qt,"Server-side rendering"),qt.forEach(r),et=x(ue),j=c(ue,"P",{class:!0});var de=h(j);tt=o(de,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),U=c(de,"A",{href:!0,target:!0,rel:!0,class:!0});var xt=h(U);at=o(xt,"viewBox"),xt.forEach(r),rt=o(de," and CSS settings that Rich Harris, Svelte's creator, outlined in "),W=c(de,"A",{href:!0,target:!0,rel:!0,class:!0});var At=h(W);st=o(At,"this blog post"),At.forEach(r),lt=o(de,"."),de.forEach(r),ot=x(ue),me=c(ue,"P",{});var Lt=h(me);nt=o(Lt,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),Lt.forEach(r),ue.forEach(r),ct=x(a),te=c(a,"DIV",{id:!0});var Ct=h(te);for(let se=0;se<k.length;se+=1)k[se].l(Ct);Ct.forEach(r),a.forEach(r),this.h()},h(){document.title="Layer Cake",t(f,"name","og:title"),t(f,"content","Layer Cake"),t(u,"name","twitter:title"),t(u,"content","Layer Cake"),t(C,"id","logo"),t(C,"class","svelte-rfh4mq"),t(H,"class","svelte-rfh4mq"),t(A,"class","logo-container svelte-rfh4mq"),t(L,"href","https://svelte.dev"),t(L,"target","_blank"),t(L,"rel","noopener"),t(L,"class","svelte-rfh4mq"),t(w,"class","strong svelte-rfh4mq"),t(le,"class","strong svelte-rfh4mq"),t(oe,"class","strong svelte-rfh4mq"),t(Z,"href","#server-side"),t(Z,"class","svelte-rfh4mq"),t(v,"class","svelte-rfh4mq"),t(X,"href","/components"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(ce,"class","strong svelte-rfh4mq"),t(Y,"href","/guide#transform-components"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-rfh4mq"),t(I,"class","svelte-rfh4mq"),t(F,"href","guide"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-rfh4mq"),t(N,"href","https://github.com/mhkeller/layercake-template"),t(N,"target","_blank"),t(N,"rel","nofollow"),t(N,"class","svelte-rfh4mq"),t(O,"href","guide#transform-components"),t(O,"sveltekit:prefetch",""),t(O,"class","svelte-rfh4mq"),t(K,"href","components"),t(K,"sveltekit:prefetch",""),t(K,"class","svelte-rfh4mq"),t(V,"class","svelte-rfh4mq"),t(b,"id","dek"),t(b,"class","svelte-rfh4mq"),t(he,"class","svelte-rfh4mq"),t(ie,"class","code-example svelte-rfh4mq"),t(ee,"id","gallery"),t(fe,"class","svelte-rfh4mq"),t(U,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(U,"target","_blank"),t(U,"rel","nofollow"),t(U,"class","svelte-rfh4mq"),t(W,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(W,"target","_blank"),t(W,"rel","nofollow"),t(W,"class","svelte-rfh4mq"),t(j,"class","svelte-rfh4mq"),t(T,"class","section-hed svelte-rfh4mq"),t(T,"id","server-side"),t(te,"id","ssr-gallery"),t(g,"class","main svelte-rfh4mq")},m(i,m){e(document.head,f),e(document.head,u),ge(i,d,m),ge(i,g,m),e(g,A),e(A,C),e(A,_),e(A,H),e(H,D),e(g,s),e(g,b),e(b,v),e(v,$),e(v,L),e(L,p),e(v,E),e(v,w),e(w,R),e(v,B),e(v,le),e(le,Se),e(v,$e),e(v,oe),e(oe,qe),e(v,xe),e(v,Z),e(Z,Ae),e(v,Le),e(b,Ce),e(b,I),e(I,He),e(I,X),e(X,Ie),e(I,Ve),e(I,ne),e(ne,Pe),e(I,De),e(I,ce),e(ce,Te),e(I,je),e(I,Y),e(Y,Ge),e(I,Je),e(b,Me),e(b,V),e(V,ze),e(V,F),e(F,Re),e(V,Be),e(V,N),e(N,Ne),e(V,Ue),e(V,O),e(O,We),e(V,Xe),e(V,K),e(K,Ye),e(V,Fe),e(g,Oe),e(g,ie),e(ie,he),he.innerHTML=Mt,e(g,Ke),e(g,ee);for(let a=0;a<y.length;a+=1)y[a].m(ee,null);e(g,Qe),e(g,T),e(T,fe),e(fe,Ze),e(T,et),e(T,j),e(j,tt),e(j,U),e(U,at),e(j,rt),e(j,W),e(W,st),e(j,lt),e(T,ot),e(T,me),e(me,nt),e(g,ct),e(g,te);for(let a=0;a<k.length;a+=1)k[a].m(te,null);ve=!0},p(i,[m]){if(m&0){ae=Vt;let a;for(a=0;a<ae.length;a+=1){const G=Tt(i,ae,a);y[a]?(y[a].p(G,m),z(y[a],1)):(y[a]=jt(G),y[a].c(),z(y[a],1),y[a].m(ee,null))}for(be(),a=ae.length;a<y.length;a+=1)zt(a);_e()}if(m&0){re=Pt;let a;for(a=0;a<re.length;a+=1){const G=Dt(i,re,a);k[a]?(k[a].p(G,m),z(k[a],1)):(k[a]=Gt(G),k[a].c(),z(k[a],1),k[a].m(te,null))}for(be(),a=re.length;a<k.length;a+=1)Rt(a);_e()}},i(i){if(!ve){for(let m=0;m<ae.length;m+=1)z(y[m]);for(let m=0;m<re.length;m+=1)z(k[m]);ve=!0}},o(i){y=y.filter(Boolean);for(let m=0;m<y.length;m+=1)Q(y[m]);k=k.filter(Boolean);for(let m=0;m<k.length;m+=1)Q(k[m]);ve=!1},d(i){r(f),r(u),i&&r(d),i&&r(g),Ht(y,i),Ht(k,i)}}}const oa=!0;function Ot(S){return it.registerLanguage("svelte",It),It(it),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class na extends Nt{constructor(f){super(),Ut(this,f,Ot,Ft,Wt,{})}}export{na as default,oa as prerender};

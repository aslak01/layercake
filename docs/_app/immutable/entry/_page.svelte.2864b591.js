import{S as zt,i as Bt,s as Ut,k as l,a as w,q as c,T as Nt,l as o,h as r,c as j,m as u,r as i,n as t,F as e,b as me,g as z,f as ge,d as O,J as jt,x as _e,y as ye,z as Dt,A as be,v as xe,B as ke,U as Rt}from"../chunks/index.9b6cf9d7.js";import{H as ot,h as At}from"../chunks/hljsDefineSvelte.185b3d8f.js";import{e as Lt}from"../chunks/_examples.3b24a65d.js";import{e as Ct}from"../chunks/_examples_ssr.1f87ffaf.js";function Ht(S,h,d){const v=S.slice();return v[1]=h[d],v}function It(S,h,d){const v=S.slice();return v[1]=h[d],v}function Vt(S){let h,d,v,y=S[1].title+"",A,C,b,H,D,s,k,m;var $=S[1].component;function L(p){return{}}return $&&(s=_e($,L())),{c(){h=l("div"),d=l("h4"),v=l("a"),A=c(y),C=w(),b=l("a"),H=c("Edit"),D=w(),s&&ye(s.$$.fragment),k=w(),this.h()},l(p){h=o(p,"DIV",{class:!0});var E=u(h);d=o(E,"H4",{class:!0});var x=u(d);v=o(x,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var B=u(v);A=i(B,y),B.forEach(r),C=j(x),b=o(x,"A",{class:!0,href:!0,target:!0,rel:!0});var U=u(b);H=i(U,"Edit"),U.forEach(r),x.forEach(r),D=j(E),s&&Dt(s.$$.fragment,E),k=j(E),E.forEach(r),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href","/example/"+S[1].slug),t(v,"class","svelte-9objxt"),t(b,"class","edit-repl svelte-9objxt"),t(b,"href","https://svelte.dev/repl/"+S[1].replPath),t(b,"target","_blank"),t(b,"rel","noreferrer"),t(d,"class","title svelte-9objxt"),t(h,"class","gallery-item svelte-9objxt")},m(p,E){me(p,h,E),e(h,d),e(d,v),e(v,A),e(d,C),e(d,b),e(b,H),e(h,D),s&&be(s,h,null),e(h,k),m=!0},p(p,E){if($!==($=p[1].component)){if(s){xe();const x=s;O(x.$$.fragment,1,0,()=>{ke(x,1)}),ge()}$?(s=_e($,L()),ye(s.$$.fragment),z(s.$$.fragment,1),be(s,h,k)):s=null}},i(p){m||(s&&z(s.$$.fragment,p),m=!0)},o(p){s&&O(s.$$.fragment,p),m=!1},d(p){p&&r(h),s&&ke(s)}}}function Pt(S){let h,d,v,y=S[1].title+"",A,C,b,H,D,s,k,m;var $=S[1].component;function L(p){return{}}return $&&(s=_e($,L())),{c(){h=l("div"),d=l("h4"),v=l("a"),A=c(y),C=w(),b=l("a"),H=c("Edit"),D=w(),s&&ye(s.$$.fragment),k=w(),this.h()},l(p){h=o(p,"DIV",{class:!0});var E=u(h);d=o(E,"H4",{class:!0});var x=u(d);v=o(x,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var B=u(v);A=i(B,y),B.forEach(r),C=j(x),b=o(x,"A",{class:!0,href:!0,target:!0,rel:!0});var U=u(b);H=i(U,"Edit"),U.forEach(r),x.forEach(r),D=j(E),s&&Dt(s.$$.fragment,E),k=j(E),E.forEach(r),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href","/example-ssr/"+S[1].slug),t(v,"class","svelte-9objxt"),t(b,"class","edit-repl svelte-9objxt"),t(b,"href","https://svelte.dev/repl/"+S[1].replPath),t(b,"target","_blank"),t(b,"rel","noreferrer"),t(d,"class","title svelte-9objxt"),t(h,"class","gallery-item svelte-9objxt"),Rt(h,"scaled",S[1].title.toLowerCase().includes("map"))},m(p,E){me(p,h,E),e(h,d),e(d,v),e(v,A),e(d,C),e(d,b),e(b,H),e(h,D),s&&be(s,h,null),e(h,k),m=!0},p(p,E){if($!==($=p[1].component)){if(s){xe();const x=s;O(x.$$.fragment,1,0,()=>{ke(x,1)}),ge()}$?(s=_e($,L()),ye(s.$$.fragment),z(s.$$.fragment,1),be(s,h,k)):s=null}},i(p){m||(s&&z(s.$$.fragment,p),m=!0)},o(p){s&&O(s.$$.fragment,p),m=!1},d(p){p&&r(h),s&&ke(s)}}}function qt(S){let h,d,v,y,A,C,b,H,D,s,k,m,$,L,p,E,x,B,U,re,Ee,Se,le,$e,we,Q,je,Ae,Le,I,Ce,F,He,Ie,oe,Ve,Pe,ne,De,Te,W,Je,Ge,Me,V,ze,X,Be,Ue,N,Ne,Re,Y,qe,Fe,We,ce,ie,Tt=ot.highlight(S[0],{language:"svelte"}).value+"",Xe,Z,Ye,T,he,Ke,Oe,J,Qe,R,Ze,et,q,tt,at,st,ve,rt,lt,ee,fe,te=Lt,g=[];for(let n=0;n<te.length;n+=1)g[n]=Vt(It(S,te,n));const Jt=n=>O(g[n],1,1,()=>{g[n]=null});let ae=Ct,_=[];for(let n=0;n<ae.length;n+=1)_[n]=Pt(Ht(S,ae,n));const Gt=n=>O(_[n],1,1,()=>{_[n]=null});return{c(){h=l("meta"),d=l("meta"),v=w(),y=l("div"),A=l("div"),C=l("div"),b=w(),H=l("h1"),D=c("Layer Cake"),s=w(),k=l("div"),m=l("p"),$=c("Layer Cake is a graphics framework for "),L=l("a"),p=c("Svelte"),E=c(". It uses the measurements of your target div and your data extents to create scales that "),x=l("span"),B=c("stay synced"),U=c(" on layout changes. Use these scales to organize multiple, "),re=l("span"),Ee=c("mostly-reusable Svelte components"),Se=c(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=l("span"),$e=c("responsive graphics server-side"),we=c(" that "),Q=l("a"),je=c("work without JavaScript"),Ae=c("."),Le=w(),I=l("p"),Ce=c("Unlike other libraries, "),F=l("a"),He=c("chart components"),Ie=c(" live "),oe=l("span"),Ve=c("inside your project"),Pe=c(", so you have complete control for "),ne=l("span"),De=c("customization"),Te=c(". It also includes some handy "),W=l("a"),Je=c("helper functions"),Ge=c(" to help format your data into the right shape."),Me=w(),V=l("p"),ze=c("Read the "),X=l("a"),Be=c("guide"),Ue=c(", try the "),N=l("a"),Ne=c("starter template"),Re=c(" or check out the "),Y=l("a"),qe=c("example components"),Fe=c(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),We=w(),ce=l("div"),ie=l("pre"),Xe=w(),Z=l("div");for(let n=0;n<g.length;n+=1)g[n].c();Ye=w(),T=l("div"),he=l("h2"),Ke=c("Server-side rendering"),Oe=w(),J=l("p"),Qe=c("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=l("a"),Ze=c("viewBox"),et=c(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),q=l("a"),tt=c("this blog post"),at=c("."),st=w(),ve=l("p"),rt=c("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),lt=w(),ee=l("div");for(let n=0;n<_.length;n+=1)_[n].c();this.h()},l(n){const f=Nt("svelte-ep3aok",document.head);h=o(f,"META",{name:!0,content:!0}),d=o(f,"META",{name:!0,content:!0}),f.forEach(r),v=j(n),y=o(n,"DIV",{class:!0});var a=u(y);A=o(a,"DIV",{class:!0});var G=u(A);C=o(G,"DIV",{id:!0,class:!0}),u(C).forEach(r),b=j(G),H=o(G,"H1",{class:!0});var nt=u(H);D=i(nt,"Layer Cake"),nt.forEach(r),G.forEach(r),s=j(a),k=o(a,"DIV",{id:!0,class:!0});var ue=u(k);m=o(ue,"P",{class:!0});var P=u(m);$=i(P,"Layer Cake is a graphics framework for "),L=o(P,"A",{href:!0,target:!0,rel:!0,class:!0});var ct=u(L);p=i(ct,"Svelte"),ct.forEach(r),E=i(P,". It uses the measurements of your target div and your data extents to create scales that "),x=o(P,"SPAN",{class:!0});var it=u(x);B=i(it,"stay synced"),it.forEach(r),U=i(P," on layout changes. Use these scales to organize multiple, "),re=o(P,"SPAN",{class:!0});var ht=u(re);Ee=i(ht,"mostly-reusable Svelte components"),ht.forEach(r),Se=i(P,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o(P,"SPAN",{class:!0});var ut=u(le);$e=i(ut,"responsive graphics server-side"),ut.forEach(r),we=i(P," that "),Q=o(P,"A",{href:!0,class:!0});var pt=u(Q);je=i(pt,"work without JavaScript"),pt.forEach(r),Ae=i(P,"."),P.forEach(r),Le=j(ue),I=o(ue,"P",{class:!0});var M=u(I);Ce=i(M,"Unlike other libraries, "),F=o(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var dt=u(F);He=i(dt,"chart components"),dt.forEach(r),Ie=i(M," live "),oe=o(M,"SPAN",{class:!0});var vt=u(oe);Ve=i(vt,"inside your project"),vt.forEach(r),Pe=i(M,", so you have complete control for "),ne=o(M,"SPAN",{class:!0});var ft=u(ne);De=i(ft,"customization"),ft.forEach(r),Te=i(M,". It also includes some handy "),W=o(M,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var mt=u(W);Je=i(mt,"helper functions"),mt.forEach(r),Ge=i(M," to help format your data into the right shape."),M.forEach(r),Me=j(ue),V=o(ue,"P",{class:!0});var K=u(V);ze=i(K,"Read the "),X=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var gt=u(X);Be=i(gt,"guide"),gt.forEach(r),Ue=i(K,", try the "),N=o(K,"A",{href:!0,target:!0,rel:!0,class:!0});var _t=u(N);Ne=i(_t,"starter template"),_t.forEach(r),Re=i(K," or check out the "),Y=o(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=u(Y);qe=i(yt,"example components"),yt.forEach(r),Fe=i(K,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),K.forEach(r),ue.forEach(r),We=j(a),ce=o(a,"DIV",{class:!0});var bt=u(ce);ie=o(bt,"PRE",{class:!0});var Mt=u(ie);Mt.forEach(r),bt.forEach(r),Xe=j(a),Z=o(a,"DIV",{id:!0});var xt=u(Z);for(let se=0;se<g.length;se+=1)g[se].l(xt);xt.forEach(r),Ye=j(a),T=o(a,"DIV",{class:!0,id:!0});var pe=u(T);he=o(pe,"H2",{class:!0});var kt=u(he);Ke=i(kt,"Server-side rendering"),kt.forEach(r),Oe=j(pe),J=o(pe,"P",{class:!0});var de=u(J);Qe=i(de,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),R=o(de,"A",{href:!0,target:!0,rel:!0,class:!0});var Et=u(R);Ze=i(Et,"viewBox"),Et.forEach(r),et=i(de," and CSS settings that Rich Harris, Svelte's creator, outlined in "),q=o(de,"A",{href:!0,target:!0,rel:!0,class:!0});var St=u(q);tt=i(St,"this blog post"),St.forEach(r),at=i(de,"."),de.forEach(r),st=j(pe),ve=o(pe,"P",{});var $t=u(ve);rt=i($t,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),$t.forEach(r),pe.forEach(r),lt=j(a),ee=o(a,"DIV",{id:!0});var wt=u(ee);for(let se=0;se<_.length;se+=1)_[se].l(wt);wt.forEach(r),a.forEach(r),this.h()},h(){document.title="Layer Cake",t(h,"name","og:title"),t(h,"content","Layer Cake"),t(d,"name","twitter:title"),t(d,"content","Layer Cake"),t(C,"id","logo"),t(C,"class","svelte-9objxt"),t(H,"class","svelte-9objxt"),t(A,"class","logo-container svelte-9objxt"),t(L,"href","https://svelte.dev"),t(L,"target","_blank"),t(L,"rel","noreferrer"),t(L,"class","svelte-9objxt"),t(x,"class","strong svelte-9objxt"),t(re,"class","strong svelte-9objxt"),t(le,"class","strong svelte-9objxt"),t(Q,"href","#server-side"),t(Q,"class","svelte-9objxt"),t(m,"class","svelte-9objxt"),t(F,"href","/components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-9objxt"),t(oe,"class","strong svelte-9objxt"),t(ne,"class","strong svelte-9objxt"),t(W,"href","/guide#helper-functions"),t(W,"sveltekit:prefetch",""),t(W,"class","svelte-9objxt"),t(I,"class","svelte-9objxt"),t(X,"href","guide"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-9objxt"),t(N,"href","https://github.com/mhkeller/layercake-template"),t(N,"target","_blank"),t(N,"rel","noreferrer"),t(N,"class","svelte-9objxt"),t(Y,"href","components"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-9objxt"),t(V,"class","svelte-9objxt"),t(k,"id","dek"),t(k,"class","svelte-9objxt"),t(ie,"class","svelte-9objxt"),t(ce,"class","code-example svelte-9objxt"),t(Z,"id","gallery"),t(he,"class","svelte-9objxt"),t(R,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(R,"target","_blank"),t(R,"rel","noreferrer"),t(R,"class","svelte-9objxt"),t(q,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(q,"target","_blank"),t(q,"rel","noreferrer"),t(q,"class","svelte-9objxt"),t(J,"class","svelte-9objxt"),t(T,"class","section-hed svelte-9objxt"),t(T,"id","server-side"),t(ee,"id","ssr-gallery"),t(y,"class","main svelte-9objxt")},m(n,f){e(document.head,h),e(document.head,d),me(n,v,f),me(n,y,f),e(y,A),e(A,C),e(A,b),e(A,H),e(H,D),e(y,s),e(y,k),e(k,m),e(m,$),e(m,L),e(L,p),e(m,E),e(m,x),e(x,B),e(m,U),e(m,re),e(re,Ee),e(m,Se),e(m,le),e(le,$e),e(m,we),e(m,Q),e(Q,je),e(m,Ae),e(k,Le),e(k,I),e(I,Ce),e(I,F),e(F,He),e(I,Ie),e(I,oe),e(oe,Ve),e(I,Pe),e(I,ne),e(ne,De),e(I,Te),e(I,W),e(W,Je),e(I,Ge),e(k,Me),e(k,V),e(V,ze),e(V,X),e(X,Be),e(V,Ue),e(V,N),e(N,Ne),e(V,Re),e(V,Y),e(Y,qe),e(V,Fe),e(y,We),e(y,ce),e(ce,ie),ie.innerHTML=Tt,e(y,Xe),e(y,Z);for(let a=0;a<g.length;a+=1)g[a]&&g[a].m(Z,null);e(y,Ye),e(y,T),e(T,he),e(he,Ke),e(T,Oe),e(T,J),e(J,Qe),e(J,R),e(R,Ze),e(J,et),e(J,q),e(q,tt),e(J,at),e(T,st),e(T,ve),e(ve,rt),e(y,lt),e(y,ee);for(let a=0;a<_.length;a+=1)_[a]&&_[a].m(ee,null);fe=!0},p(n,[f]){if(f&0){te=Lt;let a;for(a=0;a<te.length;a+=1){const G=It(n,te,a);g[a]?(g[a].p(G,f),z(g[a],1)):(g[a]=Vt(G),g[a].c(),z(g[a],1),g[a].m(Z,null))}for(xe(),a=te.length;a<g.length;a+=1)Jt(a);ge()}if(f&0){ae=Ct;let a;for(a=0;a<ae.length;a+=1){const G=Ht(n,ae,a);_[a]?(_[a].p(G,f),z(_[a],1)):(_[a]=Pt(G),_[a].c(),z(_[a],1),_[a].m(ee,null))}for(xe(),a=ae.length;a<_.length;a+=1)Gt(a);ge()}},i(n){if(!fe){for(let f=0;f<te.length;f+=1)z(g[f]);for(let f=0;f<ae.length;f+=1)z(_[f]);fe=!0}},o(n){g=g.filter(Boolean);for(let f=0;f<g.length;f+=1)O(g[f]);_=_.filter(Boolean);for(let f=0;f<_.length;f+=1)O(_[f]);fe=!1},d(n){r(h),r(d),n&&r(v),n&&r(y),jt(g,n),jt(_,n)}}}function Ft(S){return ot.registerLanguage("svelte",At),At(ot),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Ot extends zt{constructor(h){super(),Bt(this,h,Ft,qt,Ut,{})}}export{Ot as default};

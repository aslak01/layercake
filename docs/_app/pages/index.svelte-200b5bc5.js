import{S as Bt,i as Nt,s as Ut,e as n,t as l,k as q,j as _e,c,a as h,g as o,d as s,n as x,m as Gt,b as t,f as ye,H as e,o as ke,u as Z,w as we,x as z,v as be,a4 as Wt,aa as Xt,P as Ct,r as Ee}from"../chunks/index-45abbae1.js";import{l as ct,h as Ht}from"../chunks/hljsDefineSvelte-faffd2a5.js";import{e as It}from"../chunks/_examples-d55469bb.js";import{e as Vt}from"../chunks/_examples_ssr-6e21669a.js";import"../chunks/Brush.html-7a3cd0d6.js";import"../chunks/index-ed7246b0.js";import"../chunks/dots-d1f3ee8e.js";import"../chunks/pointsFour-e90e2f5b.js";import"../chunks/ClevelandDotPlot.percent-range.html-7b22b7c1.js";function Pt(w,f,p){const v=w.slice();return v[1]=f[p],v}function Dt(w,f,p){const v=w.slice();return v[1]=f[p],v}function Tt(w){let f,p,v,g=w[1].title+"",A,j,P,m,D,ee,b,a,H,E;var $=w[1].component;function B(u){return{}}return $&&(a=new $(B())),{c(){f=n("div"),p=n("h4"),v=n("a"),A=l(g),P=q(),m=n("a"),D=l("Edit"),b=q(),a&&_e(a.$$.fragment),H=q(),this.h()},l(u){f=c(u,"DIV",{class:!0});var k=h(f);p=c(k,"H4",{class:!0});var S=h(p);v=c(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var I=h(v);A=o(I,g),I.forEach(s),P=x(S),m=c(S,"A",{class:!0,href:!0,target:!0,rel:!0});var N=h(m);D=o(N,"Edit"),N.forEach(s),S.forEach(s),b=x(k),a&&Gt(a.$$.fragment,k),H=x(k),k.forEach(s),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href",j="/example/"+w[1].slug),t(v,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",ee="https://svelte.dev/repl/"+w[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(p,"class","title svelte-rfh4mq"),t(f,"class","gallery-item svelte-rfh4mq")},m(u,k){ye(u,f,k),e(f,p),e(p,v),e(v,A),e(p,P),e(p,m),e(m,D),e(f,b),a&&ke(a,f,null),e(f,H),E=!0},p(u,k){if($!==($=u[1].component)){if(a){Ee();const S=a;Z(S.$$.fragment,1,0,()=>{be(S,1)}),we()}$?(a=new $(B()),_e(a.$$.fragment),z(a.$$.fragment,1),ke(a,f,H)):a=null}},i(u){E||(a&&z(a.$$.fragment,u),E=!0)},o(u){a&&Z(a.$$.fragment,u),E=!1},d(u){u&&s(f),a&&be(a)}}}function jt(w){let f,p,v,g=w[1].title+"",A,j,P,m,D,ee,b,a,H,E;var $=w[1].component;function B(u){return{}}return $&&(a=new $(B())),{c(){f=n("div"),p=n("h4"),v=n("a"),A=l(g),P=q(),m=n("a"),D=l("Edit"),b=q(),a&&_e(a.$$.fragment),H=q(),this.h()},l(u){f=c(u,"DIV",{class:!0});var k=h(f);p=c(k,"H4",{class:!0});var S=h(p);v=c(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var I=h(v);A=o(I,g),I.forEach(s),P=x(S),m=c(S,"A",{class:!0,href:!0,target:!0,rel:!0});var N=h(m);D=o(N,"Edit"),N.forEach(s),S.forEach(s),b=x(k),a&&Gt(a.$$.fragment,k),H=x(k),k.forEach(s),this.h()},h(){t(v,"sveltekit:prefetch",""),t(v,"href",j="/example-ssr/"+w[1].slug),t(v,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",ee="https://svelte.dev/repl/"+w[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(p,"class","title svelte-rfh4mq"),t(f,"class","gallery-item svelte-rfh4mq"),Wt(f,"scaled",w[1].title.toLowerCase().includes("map"))},m(u,k){ye(u,f,k),e(f,p),e(p,v),e(v,A),e(p,P),e(p,m),e(m,D),e(f,b),a&&ke(a,f,null),e(f,H),E=!0},p(u,k){if($!==($=u[1].component)){if(a){Ee();const S=a;Z(S.$$.fragment,1,0,()=>{be(S,1)}),we()}$?(a=new $(B()),_e(a.$$.fragment),z(a.$$.fragment,1),ke(a,f,H)):a=null}},i(u){E||(a&&z(a.$$.fragment,u),E=!0)},o(u){a&&Z(a.$$.fragment,u),E=!1},d(u){u&&s(f),a&&be(a)}}}function Yt(w){let f,p,v,g,A,j,P,m,D,ee,b,a,H,E,$,B,u,k,S,I,N,Se,ne,$e,qe,te,xe,Ae,Le,L,Ce,Y,He,Ie,ce,Ve,Pe,ie,De,Te,F,je,Ge,Me,C,Je,K,Re,ze,U,Be,Ne,O,Ue,We,Q,Xe,Ye,Fe,he,fe,Mt=ct.highlight(w[0],{language:"svelte"}).value+"",Ke,ae,Oe,T,ue,Qe,Ze,G,et,W,tt,at,X,rt,st,lt,me,ot,nt,re,ge,se=It,_=[];for(let i=0;i<se.length;i+=1)_[i]=Tt(Dt(w,se,i));const Jt=i=>Z(_[i],1,1,()=>{_[i]=null});let le=Vt,y=[];for(let i=0;i<le.length;i+=1)y[i]=jt(Pt(w,le,i));const Rt=i=>Z(y[i],1,1,()=>{y[i]=null});return{c(){f=n("meta"),p=n("meta"),v=q(),g=n("div"),A=n("div"),j=n("div"),P=q(),m=n("h1"),D=l("Layer Cake"),ee=q(),b=n("div"),a=n("p"),H=l("Layer Cake is a graphics framework for "),E=n("a"),$=l("Svelte"),B=l(". It uses the measurements of your target div and your data extents to create scales that "),u=n("span"),k=l("stay synced"),S=l(" on layout changes. Use these scales to organize multiple, "),I=n("span"),N=l("mostly-reusable Svelte components"),Se=l(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),ne=n("span"),$e=l("responsive graphics server-side"),qe=l(" that "),te=n("a"),xe=l("work without JavaScript"),Ae=l("."),Le=q(),L=n("p"),Ce=l("Unlike other libraries, "),Y=n("a"),He=l("chart components"),Ie=l(" live "),ce=n("span"),Ve=l("inside your project"),Pe=l(", so you have complete control for "),ie=n("span"),De=l("customization"),Te=l(". It also includes some handy "),F=n("a"),je=l("transformation components"),Ge=l(" to help format your data into the right shape."),Me=q(),C=n("p"),Je=l("Read the "),K=n("a"),Re=l("guide"),ze=l(", try the "),U=n("a"),Be=l("starter template"),Ne=l(" or check out "),O=n("a"),Ue=l("transform"),We=l(" and "),Q=n("a"),Xe=l("example components"),Ye=l(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Fe=q(),he=n("div"),fe=n("pre"),Ke=q(),ae=n("div");for(let i=0;i<_.length;i+=1)_[i].c();Oe=q(),T=n("div"),ue=n("h2"),Qe=l("Server-side rendering"),Ze=q(),G=n("p"),et=l("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),W=n("a"),tt=l("viewBox"),at=l(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),X=n("a"),rt=l("this blog post"),st=l("."),lt=q(),me=n("p"),ot=l("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),nt=q(),re=n("div");for(let i=0;i<y.length;i+=1)y[i].c();this.h()},l(i){const d=Xt('[data-svelte="svelte-ep3aok"]',document.head);f=c(d,"META",{name:!0,content:!0}),p=c(d,"META",{name:!0,content:!0}),d.forEach(s),v=x(i),g=c(i,"DIV",{class:!0});var r=h(g);A=c(r,"DIV",{class:!0});var M=h(A);j=c(M,"DIV",{id:!0,class:!0}),h(j).forEach(s),P=x(M),m=c(M,"H1",{class:!0});var it=h(m);D=o(it,"Layer Cake"),it.forEach(s),M.forEach(s),ee=x(r),b=c(r,"DIV",{id:!0,class:!0});var pe=h(b);a=c(pe,"P",{class:!0});var V=h(a);H=o(V,"Layer Cake is a graphics framework for "),E=c(V,"A",{href:!0,target:!0,rel:!0,class:!0});var ht=h(E);$=o(ht,"Svelte"),ht.forEach(s),B=o(V,". It uses the measurements of your target div and your data extents to create scales that "),u=c(V,"SPAN",{class:!0});var ft=h(u);k=o(ft,"stay synced"),ft.forEach(s),S=o(V," on layout changes. Use these scales to organize multiple, "),I=c(V,"SPAN",{class:!0});var ut=h(I);N=o(ut,"mostly-reusable Svelte components"),ut.forEach(s),Se=o(V,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),ne=c(V,"SPAN",{class:!0});var pt=h(ne);$e=o(pt,"responsive graphics server-side"),pt.forEach(s),qe=o(V," that "),te=c(V,"A",{href:!0,class:!0});var vt=h(te);xe=o(vt,"work without JavaScript"),vt.forEach(s),Ae=o(V,"."),V.forEach(s),Le=x(pe),L=c(pe,"P",{class:!0});var J=h(L);Ce=o(J,"Unlike other libraries, "),Y=c(J,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var dt=h(Y);He=o(dt,"chart components"),dt.forEach(s),Ie=o(J," live "),ce=c(J,"SPAN",{class:!0});var mt=h(ce);Ve=o(mt,"inside your project"),mt.forEach(s),Pe=o(J,", so you have complete control for "),ie=c(J,"SPAN",{class:!0});var gt=h(ie);De=o(gt,"customization"),gt.forEach(s),Te=o(J,". It also includes some handy "),F=c(J,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var _t=h(F);je=o(_t,"transformation components"),_t.forEach(s),Ge=o(J," to help format your data into the right shape."),J.forEach(s),Me=x(pe),C=c(pe,"P",{class:!0});var R=h(C);Je=o(R,"Read the "),K=c(R,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var yt=h(K);Re=o(yt,"guide"),yt.forEach(s),ze=o(R,", try the "),U=c(R,"A",{href:!0,target:!0,rel:!0,class:!0});var kt=h(U);Be=o(kt,"starter template"),kt.forEach(s),Ne=o(R," or check out "),O=c(R,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var wt=h(O);Ue=o(wt,"transform"),wt.forEach(s),We=o(R," and "),Q=c(R,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var bt=h(Q);Xe=o(bt,"example components"),bt.forEach(s),Ye=o(R,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),R.forEach(s),pe.forEach(s),Fe=x(r),he=c(r,"DIV",{class:!0});var Et=h(he);fe=c(Et,"PRE",{class:!0});var zt=h(fe);zt.forEach(s),Et.forEach(s),Ke=x(r),ae=c(r,"DIV",{id:!0});var St=h(ae);for(let oe=0;oe<_.length;oe+=1)_[oe].l(St);St.forEach(s),Oe=x(r),T=c(r,"DIV",{class:!0,id:!0});var ve=h(T);ue=c(ve,"H2",{class:!0});var $t=h(ue);Qe=o($t,"Server-side rendering"),$t.forEach(s),Ze=x(ve),G=c(ve,"P",{class:!0});var de=h(G);et=o(de,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),W=c(de,"A",{href:!0,target:!0,rel:!0,class:!0});var qt=h(W);tt=o(qt,"viewBox"),qt.forEach(s),at=o(de," and CSS settings that Rich Harris, Svelte's creator, outlined in "),X=c(de,"A",{href:!0,target:!0,rel:!0,class:!0});var xt=h(X);rt=o(xt,"this blog post"),xt.forEach(s),st=o(de,"."),de.forEach(s),lt=x(ve),me=c(ve,"P",{});var At=h(me);ot=o(At,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),At.forEach(s),ve.forEach(s),nt=x(r),re=c(r,"DIV",{id:!0});var Lt=h(re);for(let oe=0;oe<y.length;oe+=1)y[oe].l(Lt);Lt.forEach(s),r.forEach(s),this.h()},h(){document.title="Layer Cake",t(f,"name","og:title"),t(f,"content","Layer Cake"),t(p,"name","twitter:title"),t(p,"content","Layer Cake"),t(j,"id","logo"),t(j,"class","svelte-rfh4mq"),t(m,"class","svelte-rfh4mq"),t(A,"class","logo-container svelte-rfh4mq"),t(E,"href","https://svelte.dev"),t(E,"target","_blank"),t(E,"rel","noopener"),t(E,"class","svelte-rfh4mq"),t(u,"class","strong svelte-rfh4mq"),t(I,"class","strong svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(te,"href","#server-side"),t(te,"class","svelte-rfh4mq"),t(a,"class","svelte-rfh4mq"),t(Y,"href","/components"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-rfh4mq"),t(ce,"class","strong svelte-rfh4mq"),t(ie,"class","strong svelte-rfh4mq"),t(F,"href","/guide#transform-components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-rfh4mq"),t(L,"class","svelte-rfh4mq"),t(K,"href","guide"),t(K,"sveltekit:prefetch",""),t(K,"class","svelte-rfh4mq"),t(U,"href","https://github.com/mhkeller/layercake-template"),t(U,"target","_blank"),t(U,"rel","nofollow"),t(U,"class","svelte-rfh4mq"),t(O,"href","guide#transform-components"),t(O,"sveltekit:prefetch",""),t(O,"class","svelte-rfh4mq"),t(Q,"href","components"),t(Q,"sveltekit:prefetch",""),t(Q,"class","svelte-rfh4mq"),t(C,"class","svelte-rfh4mq"),t(b,"id","dek"),t(b,"class","svelte-rfh4mq"),t(fe,"class","svelte-rfh4mq"),t(he,"class","code-example svelte-rfh4mq"),t(ae,"id","gallery"),t(ue,"class","svelte-rfh4mq"),t(W,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(W,"target","_blank"),t(W,"rel","nofollow"),t(W,"class","svelte-rfh4mq"),t(X,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(X,"target","_blank"),t(X,"rel","nofollow"),t(X,"class","svelte-rfh4mq"),t(G,"class","svelte-rfh4mq"),t(T,"class","section-hed svelte-rfh4mq"),t(T,"id","server-side"),t(re,"id","ssr-gallery"),t(g,"class","main svelte-rfh4mq")},m(i,d){e(document.head,f),e(document.head,p),ye(i,v,d),ye(i,g,d),e(g,A),e(A,j),e(A,P),e(A,m),e(m,D),e(g,ee),e(g,b),e(b,a),e(a,H),e(a,E),e(E,$),e(a,B),e(a,u),e(u,k),e(a,S),e(a,I),e(I,N),e(a,Se),e(a,ne),e(ne,$e),e(a,qe),e(a,te),e(te,xe),e(a,Ae),e(b,Le),e(b,L),e(L,Ce),e(L,Y),e(Y,He),e(L,Ie),e(L,ce),e(ce,Ve),e(L,Pe),e(L,ie),e(ie,De),e(L,Te),e(L,F),e(F,je),e(L,Ge),e(b,Me),e(b,C),e(C,Je),e(C,K),e(K,Re),e(C,ze),e(C,U),e(U,Be),e(C,Ne),e(C,O),e(O,Ue),e(C,We),e(C,Q),e(Q,Xe),e(C,Ye),e(g,Fe),e(g,he),e(he,fe),fe.innerHTML=Mt,e(g,Ke),e(g,ae);for(let r=0;r<_.length;r+=1)_[r].m(ae,null);e(g,Oe),e(g,T),e(T,ue),e(ue,Qe),e(T,Ze),e(T,G),e(G,et),e(G,W),e(W,tt),e(G,at),e(G,X),e(X,rt),e(G,st),e(T,lt),e(T,me),e(me,ot),e(g,nt),e(g,re);for(let r=0;r<y.length;r+=1)y[r].m(re,null);ge=!0},p(i,[d]){if(d&0){se=It;let r;for(r=0;r<se.length;r+=1){const M=Dt(i,se,r);_[r]?(_[r].p(M,d),z(_[r],1)):(_[r]=Tt(M),_[r].c(),z(_[r],1),_[r].m(ae,null))}for(Ee(),r=se.length;r<_.length;r+=1)Jt(r);we()}if(d&0){le=Vt;let r;for(r=0;r<le.length;r+=1){const M=Pt(i,le,r);y[r]?(y[r].p(M,d),z(y[r],1)):(y[r]=jt(M),y[r].c(),z(y[r],1),y[r].m(re,null))}for(Ee(),r=le.length;r<y.length;r+=1)Rt(r);we()}},i(i){if(!ge){for(let d=0;d<se.length;d+=1)z(_[d]);for(let d=0;d<le.length;d+=1)z(y[d]);ge=!0}},o(i){_=_.filter(Boolean);for(let d=0;d<_.length;d+=1)Z(_[d]);y=y.filter(Boolean);for(let d=0;d<y.length;d+=1)Z(y[d]);ge=!1},d(i){s(f),s(p),i&&s(v),i&&s(g),Ct(_,i),Ct(y,i)}}}const la=!0;function Ft(w){return ct.registerLanguage("svelte",Ht),Ht(ct),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class oa extends Bt{constructor(f){super(),Nt(this,f,Ft,Yt,Ut,{})}}export{oa as default,la as prerender};

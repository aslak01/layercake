{"main":{"slug":"Column.svelte","contents":"<!--\n  @component\n  Generates an SVG column chart.\n -->\n<script>\n  import { getContext } from 'svelte';\n\n  const { data, xGet, yGet, yRange, xScale } = getContext('LayerCake');\n\n  $: columnWidth = d => {\n    const vals = $xGet(d);\n    return Math.max(0, (vals[1] - vals[0]));\n  };\n\n  $: columnHeight = d => {\n    return $yRange[0] - $yGet(d);\n  };\n\n  /** @type {String} [fill='#00e047'] – The shape's fill color. */\n  export let fill = '#00e047';\n\n  /** @type {String} [stroke='#000'] – The shape's stroke color. */\n  export let stroke = '#000';\n\n  /** @type {Number} [strokeWidth=0] – The shape's stroke width. */\n  export let strokeWidth = 0;\n\n</script>\n\n<g class=\"column-group\">\n  {#each $data as d, i}\n    <rect\n      class='group-rect'\n      data-id=\"{i}\"\n      x=\"{$xScale.bandwidth ? $xGet(d) : $xGet(d)[0]}\"\n      y=\"{$yGet(d)}\"\n      width=\"{$xScale.bandwidth ? $xScale.bandwidth() : columnWidth(d)}\"\n      height=\"{columnHeight(d)}\"\n      {fill}\n      {stroke}\n      stroke-width=\"{strokeWidth}\"\n    />\n  {/each}\n</g>"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/Column","/example/Histogram"]},{"group":"SSR","matches":["/example-ssr/Column","/example-ssr/Histogram"]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"– The shape's fill color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"fill","default":"'#00e047'"},{"title":"param","description":"– The shape's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"stroke","default":"'#000'"},{"title":"param","description":"– The shape's stroke width.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"strokeWidth","default":"0"}]},"componentDescription":"Generates an SVG column chart.","modules":[]}